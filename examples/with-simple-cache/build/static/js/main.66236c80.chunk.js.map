{"version":3,"sources":["../../../es/core/utils.js","../../../es/core/notifyManager.js","../../../es/core/focusManager.js","../../../es/core/subscribable.js","../../../es/core/retryer.js","../../../es/core/onlineManager.js","../../../es/core/logger.js","../../../es/index.js","../../../es/core/index.js","../../../es/react/QueryClientProvider.js","../../../es/react/QueryErrorResetBoundary.js","../../../es/core/query.js","../../../es/core/queryCache.js","../../../es/core/mutation.js","../../../es/core/mutationCache.js","../../../es/core/queryClient.js","../../../es/react/index.js","../../../es/core/queryObserver.js","../../../es/react/useQuery.js","../../../es/react/useBaseQuery.js","../../../devtools/index.js","index.js","../../../es/react/reactBatchedUpdates.js","../../../es/react/setBatchUpdatesFn.js","../../../es/react/logger.js","../../../es/react/setLogger.js"],"names":["__webpack_require__","d","__webpack_exports__","isServer","noop","functionalUpdate","isValidTimeout","ensureArray","timeUntilStale","parseQueryArgs","parseFilterArgs","matchQuery","getQueryKeyHashFn","hashQueryKey","partialMatchKey","replaceEqualDeep","shallowEqualObjects","sleep","getStatusProps","scheduleMicrotask","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","window","updater","input","value","Infinity","Array","isArray","updatedAt","staleTime","Math","max","Date","now","arg1","arg2","arg3","isQueryKey","Object","queryKey","queryFn","filters","query","isActive","active","exact","fetching","inactive","predicate","stale","hashFn","options","queryHash","isStale","isFetching","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","keys","sort","reduce","result","key","a","b","partialDeepEqual","some","array","aSize","length","bItems","bSize","copy","equalItems","i","o","hasObjectPrototype","ctor","constructor","prot","prototype","hasOwnProperty","toString","call","timeout","Promise","resolve","setTimeout","status","isLoading","isSuccess","isError","isIdle","callback","then","catch","error","notifyManager","_utils__WEBPACK_IMPORTED_MODULE_0__","NotifyManager","this","queue","transactions","notifyFn","batchNotifyFn","_proto","batch","flush","schedule","_this","push","batchCalls","_this2","_len","arguments","args","_key","apply","_this3","forEach","setNotifyFunction","fn","setBatchNotifyFunction","focusManager","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__","_subscribable__WEBPACK_IMPORTED_MODULE_1__","_utils__WEBPACK_IMPORTED_MODULE_2__","_Subscribable","FocusManager","onSubscribe","removeEventListener","setDefaultEventListener","setEventListener","setup","focused","setFocused","onFocus","listeners","listener","isFocused","document","undefined","includes","visibilityState","_window","addEventListener","Subscribable","subscribe","filter","x","onUnsubscribe","hasListeners","isCancelledError","Retryer","_focusManager__WEBPACK_IMPORTED_MODULE_0__","_onlineManager__WEBPACK_IMPORTED_MODULE_1__","defaultRetryDelay","failureCount","min","pow","isCancelable","cancel","CancelledError","revert","silent","config","cancelFn","continueFn","promiseResolve","promiseReject","cancelRetry","cancelOptions","continue","isPaused","isResolved","isTransportCancelable","promise","outerResolve","outerReject","reject","run","promiseOrValue","_unused","_config$retry","_config$retryDelay","retry","retryDelay","delay","shouldRetry","onFail","isOnline","continueResolve","onPause","onContinue","onlineManager","OnlineManager","online","setOnline","onOnline","navigator","onLine","getLogger","setLogger","logger","console","warn","log","newLogger","_core__WEBPACK_IMPORTED_MODULE_0__","_react__WEBPACK_IMPORTED_MODULE_1__","_queryClient__WEBPACK_IMPORTED_MODULE_0__","_types__WEBPACK_IMPORTED_MODULE_1__","useQueryClient","QueryClientProvider","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","QueryClientContext","context","createContext","ReactQueryClientContext","getQueryClientContext","_ref","queryClient","useContext","Error","_ref2","client","children","useEffect","mount","unmount","Context","createElement","Provider","useQueryErrorResetBoundary","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","query_Query","Query","defaultOptions","setOptions","observers","cache","initialState","state","getDefaultState","scheduleGc","_this$options$cacheTi","esm_extends","cacheTime","setDefaultOptions","clearGcTimeout","utils","gcTimeout","remove","clearTimeout","setData","_this$options$isDataE","_this$options","prevData","data","isDataEqual","structuralSharing","dispatch","type","dataUpdatedAt","setState","_this$retryer","retryer","destroy","observer","enabled","isInvalidated","getCurrentResult","isStaleByTime","_this$retryer2","find","willFetchOnWindowFocus","refetch","_this$retryer3","willFetchOnReconnect","addObserver","indexOf","notify","removeObserver","invalidate","fetch","fetchOptions","_this$options$behavio","_context$fetchOptions","cancelRefetch","_this$options$behavio2","_context$fetchOptions2","queryFnContext","pageParam","fetchFn","behavior","onFetch","fetchMeta","meta","action","reducer","onQueryUpdate","initialData","hasData","dataUpdateCount","errorUpdateCount","errorUpdatedAt","fetchFailureCount","_action$meta","_action$dataUpdatedAt","queryCache_QueryCache","QueryCache","queries","queriesMap","inheritsLoose","build","_options$queryHash","get","defaultQueryOptions","getQueryDefaults","add","queryInMap","clear","getAll","findAll","_this4","_this5","subscribable","mutation_Mutation","Mutation","mutationId","mutationCache","variables","execute","restored","onMutate","executeMutation","onSuccess","onSettled","onError","_this$options$retry","mutationFn","onMutationUpdate","mutationCache_MutationCache","MutationCache","mutations","mutation","defaultMutationOptions","mutationKey","getMutationDefaults","resumePausedMutations","pausedMutations","QueryClient","_utils__WEBPACK_IMPORTED_MODULE_1__","_queryCache__WEBPACK_IMPORTED_MODULE_2__","_mutationCache__WEBPACK_IMPORTED_MODULE_3__","_focusManager__WEBPACK_IMPORTED_MODULE_4__","_onlineManager__WEBPACK_IMPORTED_MODULE_5__","_notifyManager__WEBPACK_IMPORTED_MODULE_6__","queryCache","queryDefaults","mutationDefaults","unsubscribeFocus","unsubscribeOnline","_this$unsubscribeFocu","_this$unsubscribeOnli","getQueryData","_this$queryCache$find","setQueryData","parsedOptions","defaultedOptions","getQueryState","_this$queryCache$find2","removeQueries","resetQueries","_parseFilterArgs3","refetchFilters","refetchQueries","cancelQueries","_parseFilterArgs4","_parseFilterArgs4$","promises","map","all","invalidateQueries","_filters$refetchActiv","_filters$refetchInact","_parseFilterArgs5","refetchActive","refetchInactive","_parseFilterArgs6","throwOnError","fetchQuery","prefetchQuery","cancelMutations","_this6","getMutationCache","getQueryCache","getDefaultOptions","setQueryDefaults","_this$queryDefaults$f","setMutationDefaults","_this$mutationDefault","_defaulted","defaultQueryObserverOptions","_QueryClientProvider__WEBPACK_IMPORTED_MODULE_2__","_useQuery__WEBPACK_IMPORTED_MODULE_3__","_types__WEBPACK_IMPORTED_MODULE_4__","QueryObserver","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__","_notifyManager__WEBPACK_IMPORTED_MODULE_3__","initialDataUpdateCount","initialErrorUpdateCount","bindMethods","bind","updateQuery","currentQuery","willFetchOnMount","executeFetch","updateTimers","willLoadOnMount","willRefetchOnMount","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","willFetchOptionally","clearTimers","prevOptions","prevQuery","optionalFetch","updateStaleTimeout","refetchInterval","updateRefetchInterval","currentResult","getNextResult","unsubscribe","getCurrentQuery","updateResult","clearStaleTimeout","staleTimeoutId","prevResult","shouldNotifyListeners","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","clearInterval","getNewResult","willFetch","_this$previousQueryRe","isPreviousData","isPlaceholderData","keepPreviousData","previousQueryResult","select","_this$currentResultSt","_this$currentResult","currentResultState","placeholderData","isFetched","isFetchedAfterMount","isLoadingError","isRefetchError","notifyOnChangeProps","notifyOnChangePropsExclusions","_loop","changed","isIncluded","isExcluded","v","_ret","notifyOptions","useQuery","Observer","errorResetBoundary","QueryErrorResetBoundary","suspense","observerRef","react_default","useRef","current","_React$useState","useState","setCurrentResult","useErrorBoundary","finally","useBaseQuery","queryObserver","module","exports","ReactQueryDevtools","ReactQueryDevtoolsPanel","App","React","_React$useState2","_Users_tannerlinsley_GitHub_react_query_examples_basic_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","postId","setPostId","react__WEBPACK_IMPORTED_MODULE_3___default","react_query__WEBPACK_IMPORTED_MODULE_6__","Post","Posts","react_query_devtools__WEBPACK_IMPORTED_MODULE_7__","initialIsOpen","_usePosts","_Users_tannerlinsley_GitHub_react_query_examples_basic_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_tannerlinsley_GitHub_react_query_examples_basic_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","_yield$axios$get","wrap","_context","prev","next","axios","sent","abrupt","stop","message","Fragment","post","id","onClick","href","style","fontWeight","color","title","getPostById","_ref3","_callee2","_yield$axios$get2","_context2","concat","_x","_ref4","_usePost","usePost","body","rootElement","getElementById","ReactDOM","render","unstable_batchedUpdates","logger_logger"],"mappings":"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","file":"static/js/main.66236c80.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\"; // TYPES\n// UTILS\n\nexport var isServer = typeof window === 'undefined';\nexport function noop() {\n  return undefined;\n}\nexport function functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nexport function isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nexport function ensureArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nexport function difference(array1, array2) {\n  return array1.filter(function (x) {\n    return array2.indexOf(x) === -1;\n  });\n}\nexport function replaceAt(array, index, value) {\n  var copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nexport function timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nexport function parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return _extends({}, arg3, {\n      queryKey: arg1,\n      queryFn: arg2\n    });\n  }\n\n  return _extends({}, arg2, {\n    queryKey: arg1\n  });\n}\nexport function parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return _extends({}, arg3, {\n        mutationKey: arg1,\n        mutationFn: arg2\n      });\n    }\n\n    return _extends({}, arg2, {\n      mutationKey: arg1\n    });\n  }\n\n  if (typeof arg1 === 'function') {\n    return _extends({}, arg2, {\n      mutationFn: arg1\n    });\n  }\n\n  return _extends({}, arg1);\n}\nexport function parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [_extends({}, arg2, {\n    queryKey: arg1\n  }), arg3] : [arg1 || {}, arg2];\n}\nexport function matchQuery(filters, query) {\n  var active = filters.active,\n      exact = filters.exact,\n      fetching = filters.fetching,\n      inactive = filters.inactive,\n      predicate = filters.predicate,\n      queryKey = filters.queryKey,\n      stale = filters.stale;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      var hashFn = getQueryKeyHashFn(query.options);\n\n      if (query.queryHash !== hashFn(queryKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  var isActive;\n\n  if (inactive === false || active && !inactive) {\n    isActive = true;\n  } else if (active === false || inactive && !active) {\n    isActive = false;\n  }\n\n  if (typeof isActive === 'boolean' && query.isActive() !== isActive) {\n    return false;\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetching === 'boolean' && query.isFetching() !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nexport function getQueryKeyHashFn(options) {\n  return (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n}\n/**\n * Default query keys hash function.\n */\n\nexport function hashQueryKey(queryKey) {\n  return stableValueHash(queryKey);\n}\n/**\n * Hashes the value into a stable hash.\n */\n\nexport function stableValueHash(value) {\n  return JSON.stringify(value, function (_, val) {\n    return isPlainObject(val) ? Object.keys(val).sort().reduce(function (result, key) {\n      result[key] = val[key];\n      return result;\n    }, {}) : val;\n  });\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nexport function partialMatchKey(a, b) {\n  return partialDeepEqual(ensureArray(a), ensureArray(b));\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nexport function partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(function (key) {\n      return !partialDeepEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nexport function replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  var array = Array.isArray(a) && Array.isArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    var aSize = array ? a.length : Object.keys(a).length;\n    var bItems = array ? b : Object.keys(b);\n    var bSize = bItems.length;\n    var copy = array ? [] : {};\n    var equalItems = 0;\n\n    for (var i = 0; i < bSize; i++) {\n      var key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nexport function shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (var key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nexport function isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  var ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  var prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nexport function isQueryKey(value) {\n  return typeof value === 'string' || Array.isArray(value);\n}\nexport function isError(value) {\n  return value instanceof Error;\n}\nexport function sleep(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\nexport function getStatusProps(status) {\n  return {\n    status: status,\n    isLoading: status === 'loading',\n    isSuccess: status === 'success',\n    isError: status === 'error',\n    isIdle: status === 'idle'\n  };\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nexport function scheduleMicrotask(callback) {\n  Promise.resolve().then(callback).catch(function (error) {\n    return setTimeout(function () {\n      throw error;\n    });\n  });\n}","import { scheduleMicrotask } from './utils'; // TYPES\n// CLASS\n\nvar NotifyManager = /*#__PURE__*/function () {\n  function NotifyManager() {\n    this.queue = [];\n    this.transactions = 0;\n\n    this.notifyFn = function (callback) {\n      callback();\n    };\n\n    this.batchNotifyFn = function (callback) {\n      callback();\n    };\n  }\n\n  var _proto = NotifyManager.prototype;\n\n  _proto.batch = function batch(callback) {\n    this.transactions++;\n    var result = callback();\n    this.transactions--;\n\n    if (!this.transactions) {\n      this.flush();\n    }\n\n    return result;\n  };\n\n  _proto.schedule = function schedule(callback) {\n    var _this = this;\n\n    if (this.transactions) {\n      this.queue.push(callback);\n    } else {\n      scheduleMicrotask(function () {\n        _this.notifyFn(callback);\n      });\n    }\n  }\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n  ;\n\n  _proto.batchCalls = function batchCalls(callback) {\n    var _this2 = this;\n\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this2.schedule(function () {\n        callback.apply(void 0, args);\n      });\n    };\n  };\n\n  _proto.flush = function flush() {\n    var _this3 = this;\n\n    var queue = this.queue;\n    this.queue = [];\n\n    if (queue.length) {\n      scheduleMicrotask(function () {\n        _this3.batchNotifyFn(function () {\n          queue.forEach(function (callback) {\n            _this3.notifyFn(callback);\n          });\n        });\n      });\n    }\n  }\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n  ;\n\n  _proto.setNotifyFunction = function setNotifyFunction(fn) {\n    this.notifyFn = fn;\n  }\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n  ;\n\n  _proto.setBatchNotifyFunction = function setBatchNotifyFunction(fn) {\n    this.batchNotifyFn = fn;\n  };\n\n  return NotifyManager;\n}(); // SINGLETON\n\n\nexport var notifyManager = new NotifyManager();","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { Subscribable } from './subscribable';\nimport { isServer } from './utils';\n\nvar FocusManager = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(FocusManager, _Subscribable);\n\n  function FocusManager() {\n    return _Subscribable.apply(this, arguments) || this;\n  }\n\n  var _proto = FocusManager.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (!this.removeEventListener) {\n      this.setDefaultEventListener();\n    }\n  };\n\n  _proto.setEventListener = function setEventListener(setup) {\n    var _this = this;\n\n    if (this.removeEventListener) {\n      this.removeEventListener();\n    }\n\n    this.removeEventListener = setup(function (focused) {\n      if (typeof focused === 'boolean') {\n        _this.setFocused(focused);\n      } else {\n        _this.onFocus();\n      }\n    });\n  };\n\n  _proto.setFocused = function setFocused(focused) {\n    this.focused = focused;\n\n    if (focused) {\n      this.onFocus();\n    }\n  };\n\n  _proto.onFocus = function onFocus() {\n    this.listeners.forEach(function (listener) {\n      listener();\n    });\n  };\n\n  _proto.isFocused = function isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  };\n\n  _proto.setDefaultEventListener = function setDefaultEventListener() {\n    var _window;\n\n    if (!isServer && ((_window = window) == null ? void 0 : _window.addEventListener)) {\n      this.setEventListener(function (onFocus) {\n        // Listen to visibillitychange and focus\n        window.addEventListener('visibilitychange', onFocus, false);\n        window.addEventListener('focus', onFocus, false);\n        return function () {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', onFocus);\n          window.removeEventListener('focus', onFocus);\n        };\n      });\n    }\n  };\n\n  return FocusManager;\n}(Subscribable);\n\nexport var focusManager = new FocusManager();","export var Subscribable = /*#__PURE__*/function () {\n  function Subscribable() {\n    this.listeners = [];\n  }\n\n  var _proto = Subscribable.prototype;\n\n  _proto.subscribe = function subscribe(listener) {\n    var _this = this;\n\n    var callback = listener || function () {\n      return undefined;\n    };\n\n    this.listeners.push(callback);\n    this.onSubscribe();\n    return function () {\n      _this.listeners = _this.listeners.filter(function (x) {\n        return x !== callback;\n      });\n\n      _this.onUnsubscribe();\n    };\n  };\n\n  _proto.hasListeners = function hasListeners() {\n    return this.listeners.length > 0;\n  };\n\n  _proto.onSubscribe = function onSubscribe() {// Do nothing\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {// Do nothing\n  };\n\n  return Subscribable;\n}();","import { focusManager } from './focusManager';\nimport { onlineManager } from './onlineManager';\nimport { functionalUpdate, sleep } from './utils'; // TYPES\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * Math.pow(2, failureCount), 30000);\n}\n\nfunction isCancelable(value) {\n  return typeof (value == null ? void 0 : value.cancel) === 'function';\n}\n\nexport var CancelledError = function CancelledError(options) {\n  this.revert = options == null ? void 0 : options.revert;\n  this.silent = options == null ? void 0 : options.silent;\n};\nexport function isCancelledError(value) {\n  return value instanceof CancelledError;\n} // CLASS\n\nexport var Retryer = function Retryer(config) {\n  var _this = this;\n\n  var cancelRetry = false;\n  var cancelFn;\n  var continueFn;\n  var promiseResolve;\n  var promiseReject;\n\n  this.cancel = function (cancelOptions) {\n    return cancelFn == null ? void 0 : cancelFn(cancelOptions);\n  };\n\n  this.cancelRetry = function () {\n    cancelRetry = true;\n  };\n\n  this.continue = function () {\n    return continueFn == null ? void 0 : continueFn();\n  };\n\n  this.failureCount = 0;\n  this.isPaused = false;\n  this.isResolved = false;\n  this.isTransportCancelable = false;\n  this.promise = new Promise(function (outerResolve, outerReject) {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  var resolve = function resolve(value) {\n    _this.isResolved = true;\n    continueFn == null ? void 0 : continueFn();\n    promiseResolve(value);\n  };\n\n  var reject = function reject(value) {\n    _this.isResolved = true;\n    continueFn == null ? void 0 : continueFn();\n    promiseReject(value);\n  };\n\n  var pause = function pause() {\n    return new Promise(function (continueResolve) {\n      continueFn = continueResolve;\n      _this.isPaused = true;\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(function () {\n      continueFn = undefined;\n      _this.isPaused = false;\n      config.onContinue == null ? void 0 : config.onContinue();\n    });\n  }; // Create loop function\n\n\n  var run = function run() {\n    // Do nothing if already resolved\n    if (_this.isResolved) {\n      return;\n    }\n\n    var promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    } // Create callback to cancel this fetch\n\n\n    cancelFn = function cancelFn(cancelOptions) {\n      reject(new CancelledError(cancelOptions)); // Cancel transport if supported\n\n      if (isCancelable(promiseOrValue)) {\n        try {\n          promiseOrValue.cancel();\n        } catch (_unused) {}\n      }\n    }; // Check if the transport layer support cancellation\n\n\n    _this.isTransportCancelable = isCancelable(promiseOrValue);\n    Promise.resolve(promiseOrValue).then(resolve).catch(function (error) {\n      var _config$retry, _config$retryDelay; // Stop if the fetch is already resolved\n\n\n      if (_this.isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      var retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      var retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      var delay = functionalUpdate(retryDelay, _this.failureCount) || 0;\n      var shouldRetry = retry === true || typeof retry === 'number' && _this.failureCount < retry || typeof retry === 'function' && retry(_this.failureCount, error);\n\n      if (cancelRetry || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      _this.failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(_this.failureCount, error); // Delay\n\n      sleep(delay) // Pause if the document is not visible or when the device is offline\n      .then(function () {\n        if (!focusManager.isFocused() || !onlineManager.isOnline()) {\n          return pause();\n        }\n      }).then(function () {\n        if (cancelRetry) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  run();\n};","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { Subscribable } from './subscribable';\nimport { isServer } from './utils';\n\nvar OnlineManager = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(OnlineManager, _Subscribable);\n\n  function OnlineManager() {\n    return _Subscribable.apply(this, arguments) || this;\n  }\n\n  var _proto = OnlineManager.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (!this.removeEventListener) {\n      this.setDefaultEventListener();\n    }\n  };\n\n  _proto.setEventListener = function setEventListener(setup) {\n    var _this = this;\n\n    if (this.removeEventListener) {\n      this.removeEventListener();\n    }\n\n    this.removeEventListener = setup(function (online) {\n      if (typeof online === 'boolean') {\n        _this.setOnline(online);\n      } else {\n        _this.onOnline();\n      }\n    });\n  };\n\n  _proto.setOnline = function setOnline(online) {\n    this.online = online;\n\n    if (online) {\n      this.onOnline();\n    }\n  };\n\n  _proto.onOnline = function onOnline() {\n    this.listeners.forEach(function (listener) {\n      listener();\n    });\n  };\n\n  _proto.isOnline = function isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    return navigator.onLine === undefined || navigator.onLine;\n  };\n\n  _proto.setDefaultEventListener = function setDefaultEventListener() {\n    var _window;\n\n    if (!isServer && ((_window = window) == null ? void 0 : _window.addEventListener)) {\n      this.setEventListener(function (onOnline) {\n        // Listen to online\n        window.addEventListener('online', onOnline, false);\n        return function () {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', onOnline);\n        };\n      });\n    }\n  };\n\n  return OnlineManager;\n}(Subscribable);\n\nexport var onlineManager = new OnlineManager();","import { noop } from './utils'; // TYPES\n// FUNCTIONS\n\nvar logger = console || {\n  error: noop,\n  warn: noop,\n  log: noop\n};\nexport function getLogger() {\n  return logger;\n}\nexport function setLogger(newLogger) {\n  logger = newLogger;\n}","export * from './core';\nexport * from './react';","export { QueryCache } from './queryCache';\nexport { QueryClient } from './queryClient';\nexport { QueryObserver } from './queryObserver';\nexport { QueriesObserver } from './queriesObserver';\nexport { InfiniteQueryObserver } from './infiniteQueryObserver';\nexport { MutationCache } from './mutationCache';\nexport { MutationObserver } from './mutationObserver';\nexport { setLogger } from './logger';\nexport { notifyManager } from './notifyManager';\nexport { focusManager } from './focusManager';\nexport { onlineManager } from './onlineManager';\nexport { hashQueryKey, isError } from './utils';\nexport { isCancelledError } from './retryer'; // Types\n\nexport * from './types';","import React from 'react';\n\nvar QueryClientContext = function () {\n  var context = /*#__PURE__*/React.createContext(undefined);\n\n  if (typeof window !== 'undefined') {\n    // @ts-ignore\n    window.ReactQueryClientContext = context;\n  }\n\n  return context;\n}();\n\nfunction getQueryClientContext() {\n  var _ref;\n\n  return typeof window !== 'undefined' ? // @ts-ignore\n  (_ref = window.ReactQueryClientContext) != null ? _ref : QueryClientContext : QueryClientContext;\n}\n\nexport var useQueryClient = function useQueryClient() {\n  var queryClient = React.useContext(getQueryClientContext());\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nexport var QueryClientProvider = function QueryClientProvider(_ref2) {\n  var client = _ref2.client,\n      children = _ref2.children;\n  React.useEffect(function () {\n    client.mount();\n    return function () {\n      client.unmount();\n    };\n  }, [client]);\n  var Context = getQueryClientContext();\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: client\n  }, children);\n};","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ensureArray, functionalUpdate, isValidTimeout, noop, replaceEqualDeep, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { getLogger } from './logger';\nimport { Retryer, isCancelledError } from './retryer'; // TYPES\n// CLASS\n\nexport var Query = /*#__PURE__*/function () {\n  function Query(config) {\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || this.getDefaultState(this.options);\n    this.state = this.initialState;\n    this.scheduleGc();\n  }\n\n  var _proto = Query.prototype;\n\n  _proto.setOptions = function setOptions(options) {\n    var _this$options$cacheTi;\n\n    this.options = _extends({}, this.defaultOptions, options); // Default to 5 minutes if not cache time is set\n\n    this.cacheTime = Math.max(this.cacheTime || 0, (_this$options$cacheTi = this.options.cacheTime) != null ? _this$options$cacheTi : 5 * 60 * 1000);\n  };\n\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\n    this.defaultOptions = options;\n  };\n\n  _proto.scheduleGc = function scheduleGc() {\n    var _this = this;\n\n    this.clearGcTimeout();\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(function () {\n        if (!_this.observers.length) {\n          _this.cache.remove(_this);\n        }\n      }, this.cacheTime);\n    }\n  };\n\n  _proto.clearGcTimeout = function clearGcTimeout() {\n    clearTimeout(this.gcTimeout);\n    this.gcTimeout = undefined;\n  };\n\n  _proto.setData = function setData(updater, options) {\n    var _this$options$isDataE, _this$options;\n\n    var prevData = this.state.data; // Get the new data\n\n    var data = functionalUpdate(updater, prevData); // Use prev data if an isDataEqual function is defined and returns `true`\n\n    if ((_this$options$isDataE = (_this$options = this.options).isDataEqual) == null ? void 0 : _this$options$isDataE.call(_this$options, prevData, data)) {\n      data = prevData;\n    } else if (this.options.structuralSharing !== false) {\n      // Structurally share data between prev and new data if needed\n      data = replaceEqualDeep(prevData, data);\n    } // Set data and mark it as cached\n\n\n    this.dispatch({\n      data: data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt\n    });\n    return data;\n  };\n\n  _proto.setState = function setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state: state\n    });\n  };\n\n  _proto.cancel = function cancel(options) {\n    var _this$retryer;\n\n    var promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  };\n\n  _proto.destroy = function destroy() {\n    this.clearGcTimeout();\n    this.cancel();\n  };\n\n  _proto.reset = function reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  };\n\n  _proto.isActive = function isActive() {\n    return this.observers.some(function (observer) {\n      return observer.options.enabled !== false;\n    });\n  };\n\n  _proto.isFetching = function isFetching() {\n    return this.state.isFetching;\n  };\n\n  _proto.isStale = function isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(function (observer) {\n      return observer.getCurrentResult().isStale;\n    });\n  };\n\n  _proto.isStaleByTime = function isStaleByTime(staleTime) {\n    if (staleTime === void 0) {\n      staleTime = 0;\n    }\n\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  };\n\n  _proto.onFocus = function onFocus() {\n    var _this$retryer2;\n\n    var observer = this.observers.find(function (x) {\n      return x.willFetchOnWindowFocus();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  };\n\n  _proto.onOnline = function onOnline() {\n    var _this$retryer3;\n\n    var observer = this.observers.find(function (x) {\n      return x.willFetchOnReconnect();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  };\n\n  _proto.addObserver = function addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer); // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify(this);\n    }\n  };\n\n  _proto.removeObserver = function removeObserver(observer) {\n    if (this.observers.indexOf(observer) !== -1) {\n      this.observers = this.observers.filter(function (x) {\n        return x !== observer;\n      });\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.retryer.isTransportCancelable) {\n            this.retryer.cancel();\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        if (this.cacheTime) {\n          this.scheduleGc();\n        } else {\n          this.cache.remove(this);\n        }\n      }\n\n      this.cache.notify(this);\n    }\n  };\n\n  _proto.invalidate = function invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  };\n\n  _proto.fetch = function fetch(options, fetchOptions) {\n    var _this2 = this,\n        _this$options$behavio,\n        _context$fetchOptions;\n\n    if (this.state.isFetching) if (this.state.dataUpdatedAt && (fetchOptions == null ? void 0 : fetchOptions.cancelRefetch)) {\n      // Silently cancel current fetch if the user wants to cancel refetches\n      this.cancel({\n        silent: true\n      });\n    } else if (this.promise) {\n      // Return current promise if we are already fetching\n      return this.promise;\n    } // Update config if passed, otherwise the config from the last execution is used\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      var observer = this.observers.find(function (x) {\n        return x.options.queryFn;\n      });\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    } // Create query function context\n\n\n    var queryKey = ensureArray(this.queryKey);\n    var queryFnContext = {\n      queryKey: queryKey,\n      pageParam: undefined\n    }; // Create fetch function\n\n    var fetchFn = function fetchFn() {\n      return _this2.options.queryFn ? _this2.options.queryFn(queryFnContext) : Promise.reject('Missing queryFn');\n    }; // Trigger behavior hook\n\n\n    var context = {\n      fetchOptions: fetchOptions,\n      options: this.options,\n      queryKey: queryKey,\n      state: this.state,\n      fetchFn: fetchFn\n    };\n\n    if ((_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch) {\n      var _this$options$behavio2;\n\n      (_this$options$behavio2 = this.options.behavior) == null ? void 0 : _this$options$behavio2.onFetch(context);\n    } // Set to fetching state if not already in it\n\n\n    if (!this.state.isFetching || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    } // Try to fetch the data\n\n\n    this.retryer = new Retryer({\n      fn: context.fetchFn,\n      onFail: function onFail() {\n        _this2.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: function onPause() {\n        _this2.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: function onContinue() {\n        _this2.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay\n    });\n    this.promise = this.retryer.promise.then(function (data) {\n      return _this2.setData(data);\n    }).catch(function (error) {\n      // Set error state if needed\n      if (!(isCancelledError(error) && error.silent)) {\n        _this2.dispatch({\n          type: 'error',\n          error: error\n        });\n      } // Log error\n\n\n      if (!isCancelledError(error)) {\n        getLogger().error(error);\n      } // Propagate error\n\n\n      throw error;\n    });\n    return this.promise;\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this3 = this;\n\n    this.state = this.reducer(this.state, action);\n    notifyManager.batch(function () {\n      _this3.observers.forEach(function (observer) {\n        observer.onQueryUpdate(action);\n      });\n\n      _this3.cache.notify(_this3);\n    });\n  };\n\n  _proto.getDefaultState = function getDefaultState(options) {\n    var data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n    var hasData = typeof data !== 'undefined';\n    return {\n      data: data,\n      dataUpdateCount: 0,\n      dataUpdatedAt: hasData ? Date.now() : 0,\n      error: null,\n      errorUpdateCount: 0,\n      errorUpdatedAt: 0,\n      fetchFailureCount: 0,\n      fetchMeta: null,\n      isFetching: false,\n      isInvalidated: false,\n      isPaused: false,\n      status: hasData ? 'success' : 'idle'\n    };\n  };\n\n  _proto.reducer = function reducer(state, action) {\n    var _action$meta, _action$dataUpdatedAt;\n\n    switch (action.type) {\n      case 'failed':\n        return _extends({}, state, {\n          fetchFailureCount: state.fetchFailureCount + 1\n        });\n\n      case 'pause':\n        return _extends({}, state, {\n          isPaused: true\n        });\n\n      case 'continue':\n        return _extends({}, state, {\n          isPaused: false\n        });\n\n      case 'fetch':\n        return _extends({}, state, {\n          fetchFailureCount: 0,\n          fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n          isFetching: true,\n          isPaused: false,\n          status: state.status === 'idle' ? 'loading' : state.status\n        });\n\n      case 'success':\n        return _extends({}, state, {\n          data: action.data,\n          dataUpdateCount: state.dataUpdateCount + 1,\n          dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n          error: null,\n          fetchFailureCount: 0,\n          isFetching: false,\n          isInvalidated: false,\n          isPaused: false,\n          status: 'success'\n        });\n\n      case 'error':\n        var error = action.error;\n\n        if (isCancelledError(error) && error.revert) {\n          return _extends({}, state, {\n            fetchFailureCount: 0,\n            isFetching: false,\n            isPaused: false,\n            status: state.status === 'loading' ? 'idle' : state.status\n          });\n        }\n\n        return _extends({}, state, {\n          error: error,\n          errorUpdateCount: state.errorUpdateCount + 1,\n          errorUpdatedAt: Date.now(),\n          fetchFailureCount: state.fetchFailureCount + 1,\n          isFetching: false,\n          isPaused: false,\n          status: 'error'\n        });\n\n      case 'invalidate':\n        return _extends({}, state, {\n          isInvalidated: true\n        });\n\n      case 'setState':\n        return _extends({}, state, action.state);\n\n      default:\n        return state;\n    }\n  };\n\n  return Query;\n}();","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { getQueryKeyHashFn, matchQuery, parseFilterArgs } from './utils';\nimport { Query } from './query';\nimport { notifyManager } from './notifyManager';\nimport { Subscribable } from './subscribable'; // TYPES\n// CLASS\n\nexport var QueryCache = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryCache, _Subscribable);\n\n  function QueryCache() {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.queries = [];\n    _this.queriesMap = {};\n    return _this;\n  }\n\n  var _proto = QueryCache.prototype;\n\n  _proto.build = function build(client, options, state) {\n    var _options$queryHash;\n\n    var hashFn = getQueryKeyHashFn(options);\n    var queryKey = options.queryKey;\n    var queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : hashFn(queryKey);\n    var query = this.get(queryHash);\n\n    if (!query) {\n      query = new Query({\n        cache: this,\n        queryKey: queryKey,\n        queryHash: queryHash,\n        options: client.defaultQueryOptions(options),\n        state: state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n\n    return query;\n  };\n\n  _proto.add = function add(query) {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query;\n      this.queries.push(query);\n      this.notify(query);\n    }\n  };\n\n  _proto.remove = function remove(query) {\n    var queryInMap = this.queriesMap[query.queryHash];\n\n    if (queryInMap) {\n      query.destroy();\n      this.queries = this.queries.filter(function (x) {\n        return x !== query;\n      });\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash];\n      }\n\n      this.notify(query);\n    }\n  };\n\n  _proto.clear = function clear() {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      _this2.queries.forEach(function (query) {\n        _this2.remove(query);\n      });\n    });\n  };\n\n  _proto.get = function get(queryHash) {\n    return this.queriesMap[queryHash];\n  };\n\n  _proto.getAll = function getAll() {\n    return this.queries;\n  };\n\n  _proto.find = function find(arg1, arg2) {\n    var _parseFilterArgs = parseFilterArgs(arg1, arg2),\n        filters = _parseFilterArgs[0];\n\n    return this.queries.find(function (query) {\n      return matchQuery(filters, query);\n    });\n  };\n\n  _proto.findAll = function findAll(arg1, arg2) {\n    var _parseFilterArgs2 = parseFilterArgs(arg1, arg2),\n        filters = _parseFilterArgs2[0];\n\n    return filters ? this.queries.filter(function (query) {\n      return matchQuery(filters, query);\n    }) : this.queries;\n  };\n\n  _proto.notify = function notify(query) {\n    var _this3 = this;\n\n    notifyManager.batch(function () {\n      _this3.listeners.forEach(function (listener) {\n        listener(query);\n      });\n    });\n  };\n\n  _proto.onFocus = function onFocus() {\n    var _this4 = this;\n\n    notifyManager.batch(function () {\n      _this4.queries.forEach(function (query) {\n        query.onFocus();\n      });\n    });\n  };\n\n  _proto.onOnline = function onOnline() {\n    var _this5 = this;\n\n    notifyManager.batch(function () {\n      _this5.queries.forEach(function (query) {\n        query.onOnline();\n      });\n    });\n  };\n\n  return QueryCache;\n}(Subscribable);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getLogger } from './logger';\nimport { notifyManager } from './notifyManager';\nimport { Retryer } from './retryer';\nimport { noop } from './utils'; // TYPES\n// CLASS\n\nexport var Mutation = /*#__PURE__*/function () {\n  function Mutation(config) {\n    this.options = _extends({}, config.defaultOptions, config.options);\n    this.mutationId = config.mutationId;\n    this.mutationCache = config.mutationCache;\n    this.observers = [];\n    this.state = config.state || getDefaultState();\n  }\n\n  var _proto = Mutation.prototype;\n\n  _proto.setState = function setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state: state\n    });\n  };\n\n  _proto.addObserver = function addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer);\n    }\n  };\n\n  _proto.removeObserver = function removeObserver(observer) {\n    this.observers = this.observers.filter(function (x) {\n      return x !== observer;\n    });\n  };\n\n  _proto.cancel = function cancel() {\n    if (this.retryer) {\n      this.retryer.cancel();\n      return this.retryer.promise.then(noop).catch(noop);\n    }\n\n    return Promise.resolve();\n  };\n\n  _proto.continue = function _continue() {\n    if (this.retryer) {\n      this.retryer.continue();\n      return this.retryer.promise;\n    }\n\n    return this.execute();\n  };\n\n  _proto.execute = function execute() {\n    var _this = this;\n\n    var data;\n    var restored = this.state.status === 'loading';\n    var promise = Promise.resolve();\n\n    if (!restored) {\n      this.dispatch({\n        type: 'loading',\n        variables: this.options.variables\n      });\n      promise = promise.then(function () {\n        return _this.options.onMutate == null ? void 0 : _this.options.onMutate(_this.state.variables);\n      }).then(function (context) {\n        if (context !== _this.state.context) {\n          _this.dispatch({\n            type: 'loading',\n            context: context,\n            variables: _this.state.variables\n          });\n        }\n      });\n    }\n\n    return promise.then(function () {\n      return _this.executeMutation();\n    }).then(function (result) {\n      data = result;\n    }).then(function () {\n      return _this.options.onSuccess == null ? void 0 : _this.options.onSuccess(data, _this.state.variables, _this.state.context);\n    }).then(function () {\n      return _this.options.onSettled == null ? void 0 : _this.options.onSettled(data, null, _this.state.variables, _this.state.context);\n    }).then(function () {\n      _this.dispatch({\n        type: 'success',\n        data: data\n      });\n\n      return data;\n    }).catch(function (error) {\n      getLogger().error(error);\n      return Promise.resolve().then(function () {\n        return _this.options.onError == null ? void 0 : _this.options.onError(error, _this.state.variables, _this.state.context);\n      }).then(function () {\n        return _this.options.onSettled == null ? void 0 : _this.options.onSettled(undefined, error, _this.state.variables, _this.state.context);\n      }).then(function () {\n        _this.dispatch({\n          type: 'error',\n          error: error\n        });\n\n        throw error;\n      });\n    });\n  };\n\n  _proto.executeMutation = function executeMutation() {\n    var _this2 = this,\n        _this$options$retry;\n\n    this.retryer = new Retryer({\n      fn: function fn() {\n        if (!_this2.options.mutationFn) {\n          return Promise.reject('No mutationFn found');\n        }\n\n        return _this2.options.mutationFn(_this2.state.variables);\n      },\n      onFail: function onFail() {\n        _this2.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: function onPause() {\n        _this2.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: function onContinue() {\n        _this2.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\n      retryDelay: this.options.retryDelay\n    });\n    return this.retryer.promise;\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this3 = this;\n\n    this.state = reducer(this.state, action);\n    notifyManager.batch(function () {\n      _this3.observers.forEach(function (observer) {\n        observer.onMutationUpdate(action);\n      });\n\n      _this3.mutationCache.notify(_this3);\n    });\n  };\n\n  return Mutation;\n}();\nexport function getDefaultState() {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined\n  };\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'failed':\n      return _extends({}, state, {\n        failureCount: state.failureCount + 1\n      });\n\n    case 'pause':\n      return _extends({}, state, {\n        isPaused: true\n      });\n\n    case 'continue':\n      return _extends({}, state, {\n        isPaused: false\n      });\n\n    case 'loading':\n      return _extends({}, state, {\n        context: action.context,\n        data: undefined,\n        error: null,\n        isPaused: false,\n        status: 'loading',\n        variables: action.variables\n      });\n\n    case 'success':\n      return _extends({}, state, {\n        data: action.data,\n        error: null,\n        status: 'success',\n        isPaused: false\n      });\n\n    case 'error':\n      return _extends({}, state, {\n        data: undefined,\n        error: action.error,\n        failureCount: state.failureCount + 1,\n        isPaused: false,\n        status: 'error'\n      });\n\n    case 'setState':\n      return _extends({}, state, action.state);\n\n    default:\n      return state;\n  }\n}","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { notifyManager } from './notifyManager';\nimport { Mutation } from './mutation';\nimport { noop } from './utils';\nimport { Subscribable } from './subscribable'; // TYPES\n// CLASS\n\nexport var MutationCache = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(MutationCache, _Subscribable);\n\n  function MutationCache() {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.mutations = [];\n    _this.mutationId = 0;\n    return _this;\n  }\n\n  var _proto = MutationCache.prototype;\n\n  _proto.build = function build(client, options, state) {\n    var mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state: state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined\n    });\n    this.add(mutation);\n    return mutation;\n  };\n\n  _proto.add = function add(mutation) {\n    this.mutations.push(mutation);\n    this.notify(mutation);\n  };\n\n  _proto.remove = function remove(mutation) {\n    this.mutations = this.mutations.filter(function (x) {\n      return x !== mutation;\n    });\n    mutation.cancel();\n    this.notify(mutation);\n  };\n\n  _proto.clear = function clear() {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      _this2.mutations.forEach(function (mutation) {\n        _this2.remove(mutation);\n      });\n    });\n  };\n\n  _proto.getAll = function getAll() {\n    return this.mutations;\n  };\n\n  _proto.notify = function notify(mutation) {\n    var _this3 = this;\n\n    notifyManager.batch(function () {\n      _this3.listeners.forEach(function (listener) {\n        listener(mutation);\n      });\n    });\n  };\n\n  _proto.onFocus = function onFocus() {\n    this.resumePausedMutations();\n  };\n\n  _proto.onOnline = function onOnline() {\n    this.resumePausedMutations();\n  };\n\n  _proto.resumePausedMutations = function resumePausedMutations() {\n    var pausedMutations = this.mutations.filter(function (x) {\n      return x.state.isPaused;\n    });\n    return notifyManager.batch(function () {\n      return pausedMutations.reduce(function (promise, mutation) {\n        return promise.then(function () {\n          return mutation.continue().catch(noop);\n        });\n      }, Promise.resolve());\n    });\n  };\n\n  return MutationCache;\n}(Subscribable);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { hashQueryKey, noop, parseFilterArgs, parseQueryArgs, partialMatchKey } from './utils';\nimport { QueryCache } from './queryCache';\nimport { MutationCache } from './mutationCache';\nimport { focusManager } from './focusManager';\nimport { onlineManager } from './onlineManager';\nimport { notifyManager } from './notifyManager'; // CLASS\n\nexport var QueryClient = /*#__PURE__*/function () {\n  function QueryClient(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    this.queryCache = config.queryCache || new QueryCache();\n    this.mutationCache = config.mutationCache || new MutationCache();\n    this.defaultOptions = config.defaultOptions || {};\n    this.queryDefaults = [];\n    this.mutationDefaults = [];\n  }\n\n  var _proto = QueryClient.prototype;\n\n  _proto.mount = function mount() {\n    var _this = this;\n\n    this.unsubscribeFocus = focusManager.subscribe(function () {\n      if (focusManager.isFocused() && onlineManager.isOnline()) {\n        _this.mutationCache.onFocus();\n\n        _this.queryCache.onFocus();\n      }\n    });\n    this.unsubscribeOnline = onlineManager.subscribe(function () {\n      if (focusManager.isFocused() && onlineManager.isOnline()) {\n        _this.mutationCache.onOnline();\n\n        _this.queryCache.onOnline();\n      }\n    });\n  };\n\n  _proto.unmount = function unmount() {\n    var _this$unsubscribeFocu, _this$unsubscribeOnli;\n\n    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);\n    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);\n  };\n\n  _proto.isFetching = function isFetching(arg1, arg2) {\n    var _parseFilterArgs = parseFilterArgs(arg1, arg2),\n        filters = _parseFilterArgs[0];\n\n    filters.fetching = true;\n    return this.queryCache.findAll(filters).length;\n  };\n\n  _proto.getQueryData = function getQueryData(queryKey, filters) {\n    var _this$queryCache$find;\n\n    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;\n  };\n\n  _proto.setQueryData = function setQueryData(queryKey, updater, options) {\n    var parsedOptions = parseQueryArgs(queryKey);\n    var defaultedOptions = this.defaultQueryOptions(parsedOptions);\n    return this.queryCache.build(this, defaultedOptions).setData(updater, options);\n  };\n\n  _proto.getQueryState = function getQueryState(queryKey, filters) {\n    var _this$queryCache$find2;\n\n    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;\n  };\n\n  _proto.removeQueries = function removeQueries(arg1, arg2) {\n    var _parseFilterArgs2 = parseFilterArgs(arg1, arg2),\n        filters = _parseFilterArgs2[0];\n\n    var queryCache = this.queryCache;\n    notifyManager.batch(function () {\n      queryCache.findAll(filters).forEach(function (query) {\n        queryCache.remove(query);\n      });\n    });\n  };\n\n  _proto.resetQueries = function resetQueries(arg1, arg2, arg3) {\n    var _this2 = this;\n\n    var _parseFilterArgs3 = parseFilterArgs(arg1, arg2, arg3),\n        filters = _parseFilterArgs3[0],\n        options = _parseFilterArgs3[1];\n\n    var queryCache = this.queryCache;\n\n    var refetchFilters = _extends({}, filters, {\n      active: true\n    });\n\n    return notifyManager.batch(function () {\n      queryCache.findAll(filters).forEach(function (query) {\n        query.reset();\n      });\n      return _this2.refetchQueries(refetchFilters, options);\n    });\n  };\n\n  _proto.cancelQueries = function cancelQueries(arg1, arg2, arg3) {\n    var _this3 = this;\n\n    var _parseFilterArgs4 = parseFilterArgs(arg1, arg2, arg3),\n        filters = _parseFilterArgs4[0],\n        _parseFilterArgs4$ = _parseFilterArgs4[1],\n        cancelOptions = _parseFilterArgs4$ === void 0 ? {} : _parseFilterArgs4$;\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true;\n    }\n\n    var promises = notifyManager.batch(function () {\n      return _this3.queryCache.findAll(filters).map(function (query) {\n        return query.cancel(cancelOptions);\n      });\n    });\n    return Promise.all(promises).then(noop).catch(noop);\n  };\n\n  _proto.invalidateQueries = function invalidateQueries(arg1, arg2, arg3) {\n    var _filters$refetchActiv,\n        _filters$refetchInact,\n        _this4 = this;\n\n    var _parseFilterArgs5 = parseFilterArgs(arg1, arg2, arg3),\n        filters = _parseFilterArgs5[0],\n        options = _parseFilterArgs5[1];\n\n    var refetchFilters = _extends({}, filters, {\n      active: (_filters$refetchActiv = filters.refetchActive) != null ? _filters$refetchActiv : true,\n      inactive: (_filters$refetchInact = filters.refetchInactive) != null ? _filters$refetchInact : false\n    });\n\n    return notifyManager.batch(function () {\n      _this4.queryCache.findAll(filters).forEach(function (query) {\n        query.invalidate();\n      });\n\n      return _this4.refetchQueries(refetchFilters, options);\n    });\n  };\n\n  _proto.refetchQueries = function refetchQueries(arg1, arg2, arg3) {\n    var _this5 = this;\n\n    var _parseFilterArgs6 = parseFilterArgs(arg1, arg2, arg3),\n        filters = _parseFilterArgs6[0],\n        options = _parseFilterArgs6[1];\n\n    var promises = notifyManager.batch(function () {\n      return _this5.queryCache.findAll(filters).map(function (query) {\n        return query.fetch();\n      });\n    });\n    var promise = Promise.all(promises).then(noop);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.fetchQuery = function fetchQuery(arg1, arg2, arg3) {\n    var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    var defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652\n\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false;\n    }\n\n    var query = this.queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  };\n\n  _proto.prefetchQuery = function prefetchQuery(arg1, arg2, arg3) {\n    return this.fetchQuery(arg1, arg2, arg3).then(noop).catch(noop);\n  };\n\n  _proto.cancelMutations = function cancelMutations() {\n    var _this6 = this;\n\n    var promises = notifyManager.batch(function () {\n      return _this6.mutationCache.getAll().map(function (mutation) {\n        return mutation.cancel();\n      });\n    });\n    return Promise.all(promises).then(noop).catch(noop);\n  };\n\n  _proto.resumePausedMutations = function resumePausedMutations() {\n    return this.getMutationCache().resumePausedMutations();\n  };\n\n  _proto.executeMutation = function executeMutation(options) {\n    return this.mutationCache.build(this, options).execute();\n  };\n\n  _proto.getQueryCache = function getQueryCache() {\n    return this.queryCache;\n  };\n\n  _proto.getMutationCache = function getMutationCache() {\n    return this.mutationCache;\n  };\n\n  _proto.getDefaultOptions = function getDefaultOptions() {\n    return this.defaultOptions;\n  };\n\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\n    this.defaultOptions = options;\n  };\n\n  _proto.setQueryDefaults = function setQueryDefaults(queryKey, options) {\n    var result = this.queryDefaults.find(function (x) {\n      return hashQueryKey(queryKey) === hashQueryKey(x.queryKey);\n    });\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.queryDefaults.push({\n        queryKey: queryKey,\n        defaultOptions: options\n      });\n    }\n  };\n\n  _proto.getQueryDefaults = function getQueryDefaults(queryKey) {\n    var _this$queryDefaults$f;\n\n    return queryKey ? (_this$queryDefaults$f = this.queryDefaults.find(function (x) {\n      return partialMatchKey(queryKey, x.queryKey);\n    })) == null ? void 0 : _this$queryDefaults$f.defaultOptions : undefined;\n  };\n\n  _proto.setMutationDefaults = function setMutationDefaults(mutationKey, options) {\n    var result = this.mutationDefaults.find(function (x) {\n      return hashQueryKey(mutationKey) === hashQueryKey(x.mutationKey);\n    });\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.mutationDefaults.push({\n        mutationKey: mutationKey,\n        defaultOptions: options\n      });\n    }\n  };\n\n  _proto.getMutationDefaults = function getMutationDefaults(mutationKey) {\n    var _this$mutationDefault;\n\n    return mutationKey ? (_this$mutationDefault = this.mutationDefaults.find(function (x) {\n      return partialMatchKey(mutationKey, x.mutationKey);\n    })) == null ? void 0 : _this$mutationDefault.defaultOptions : undefined;\n  };\n\n  _proto.defaultQueryOptions = function defaultQueryOptions(options) {\n    if (options == null ? void 0 : options._defaulted) {\n      return options;\n    }\n\n    return _extends({}, this.defaultOptions.queries, this.getQueryDefaults(options == null ? void 0 : options.queryKey), options, {\n      _defaulted: true\n    });\n  };\n\n  _proto.defaultQueryObserverOptions = function defaultQueryObserverOptions(options) {\n    return this.defaultQueryOptions(options);\n  };\n\n  _proto.defaultMutationOptions = function defaultMutationOptions(options) {\n    if (options == null ? void 0 : options._defaulted) {\n      return options;\n    }\n\n    return _extends({}, this.defaultOptions.mutations, this.getMutationDefaults(options == null ? void 0 : options.mutationKey), options, {\n      _defaulted: true\n    });\n  };\n\n  _proto.clear = function clear() {\n    this.queryCache.clear();\n    this.mutationCache.clear();\n  };\n\n  return QueryClient;\n}();","// Side effects\nimport './setBatchUpdatesFn';\nimport './setLogger';\nexport { QueryClientProvider, useQueryClient } from './QueryClientProvider';\nexport { QueryErrorResetBoundary, useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nexport { useIsFetching } from './useIsFetching';\nexport { useMutation } from './useMutation';\nexport { useQuery } from './useQuery';\nexport { useQueries } from './useQueries';\nexport { useInfiniteQuery } from './useInfiniteQuery'; // Types\n\nexport * from './types';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { getStatusProps, isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.initialDataUpdateCount = 0;\n    _this.initialErrorUpdateCount = 0;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.updateQuery();\n      this.currentQuery.addObserver(this);\n\n      if (this.willFetchOnMount()) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.willLoadOnMount = function willLoadOnMount() {\n    return this.options.enabled !== false && !this.currentQuery.state.dataUpdatedAt;\n  };\n\n  _proto.willRefetchOnMount = function willRefetchOnMount() {\n    return this.options.enabled !== false && this.currentQuery.state.dataUpdatedAt > 0 && (this.options.refetchOnMount === 'always' || this.options.refetchOnMount !== false && this.isStale());\n  };\n\n  _proto.willFetchOnMount = function willFetchOnMount() {\n    return this.willLoadOnMount() || this.willRefetchOnMount();\n  };\n\n  _proto.willFetchOnReconnect = function willFetchOnReconnect() {\n    return this.options.enabled !== false && (this.options.refetchOnReconnect === 'always' || this.options.refetchOnReconnect !== false && this.isStale());\n  };\n\n  _proto.willFetchOnWindowFocus = function willFetchOnWindowFocus() {\n    return this.options.enabled !== false && (this.options.refetchOnWindowFocus === 'always' || this.options.refetchOnWindowFocus !== false && this.isStale());\n  };\n\n  _proto.willFetchOptionally = function willFetchOptionally() {\n    return this.options.enabled !== false && this.isStale();\n  };\n\n  _proto.isStale = function isStale() {\n    return this.currentQuery.isStaleByTime(this.options.staleTime);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery(); // Take no further actions if there are no subscribers\n\n    if (!this.listeners.length) {\n      return;\n    } // If we subscribed to a new query, optionally fetch and update refetch\n\n\n    if (this.currentQuery !== prevQuery) {\n      this.optionalFetch();\n      this.updateTimers();\n      return;\n    } // Optionally fetch if the query became enabled\n\n\n    if (this.options.enabled !== false && prevOptions.enabled === false) {\n      this.optionalFetch();\n    } // Update stale interval if needed\n\n\n    if (this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this2.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this3 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this3.updateResult();\n\n      return _this3.currentResult;\n    });\n  };\n\n  _proto.optionalFetch = function optionalFetch() {\n    if (this.willFetchOptionally()) {\n      this.executeFetch();\n    }\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this4 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this4.currentResult.isStale) {\n        var prevResult = _this4.currentResult;\n\n        _this4.updateResult();\n\n        _this4.notify({\n          listeners: _this4.shouldNotifyListeners(prevResult, _this4.currentResult),\n          cache: true\n        });\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this5 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this5.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this5.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.getNewResult = function getNewResult(willFetch) {\n    var _this$previousQueryRe;\n\n    var state = this.currentQuery.state;\n    var isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data;\n    var dataUpdatedAt = state.dataUpdatedAt; // Optimistically set status to loading if we will start fetching\n\n    if (willFetch) {\n      isFetching = true;\n\n      if (status === 'idle') {\n        status = 'loading';\n      }\n    } // Keep previous data if needed\n\n\n    if (this.options.keepPreviousData && !state.dataUpdateCount && ((_this$previousQueryRe = this.previousQueryResult) == null ? void 0 : _this$previousQueryRe.isSuccess)) {\n      data = this.previousQueryResult.data;\n      dataUpdatedAt = this.previousQueryResult.dataUpdatedAt;\n      status = this.previousQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (this.options.select && typeof state.data !== 'undefined') {\n        var _this$currentResultSt; // Use the previous select result if the query data did not change\n\n\n        if (this.currentResult && state.data === ((_this$currentResultSt = this.currentResultState) == null ? void 0 : _this$currentResultSt.data)) {\n          data = this.currentResult.data;\n        } else {\n          data = this.options.select(state.data);\n\n          if (this.options.structuralSharing !== false) {\n            var _this$currentResult;\n\n            data = replaceEqualDeep((_this$currentResult = this.currentResult) == null ? void 0 : _this$currentResult.data, data);\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof this.options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData = typeof this.options.placeholderData === 'function' ? this.options.placeholderData() : this.options.placeholderData;\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = _extends({}, getStatusProps(status), {\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: state.error,\n      errorUpdatedAt: state.errorUpdateCount,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > this.initialDataUpdateCount || state.errorUpdateCount > this.initialErrorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: this.isStale(),\n      refetch: this.refetch,\n      remove: this.remove\n    });\n\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(prevResult, result) {\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (prevResult === result) {\n      return false;\n    }\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    var keys = Object.keys(result);\n\n    var _loop = function _loop(i) {\n      var key = keys[i];\n      var changed = prevResult[key] !== result[key];\n      var isIncluded = notifyOnChangeProps == null ? void 0 : notifyOnChangeProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n\n      if (changed) {\n        if (notifyOnChangePropsExclusions && isExcluded) {\n          return \"continue\";\n        }\n\n        if (!notifyOnChangeProps || isIncluded) {\n          return {\n            v: true\n          };\n        }\n      }\n    };\n\n    for (var i = 0; i < keys.length; i++) {\n      var _ret = _loop(i);\n\n      if (_ret === \"continue\") continue;\n      if (typeof _ret === \"object\") return _ret.v;\n    }\n\n    return false;\n  };\n\n  _proto.updateResult = function updateResult(willFetch) {\n    var result = this.getNewResult(willFetch); // Keep reference to the current state on which the current result is based on\n\n    this.currentResultState = this.currentQuery.state; // Only update if something has changed\n\n    if (!shallowEqualObjects(result, this.currentResult)) {\n      this.currentResult = result;\n    }\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var prevQuery = this.currentQuery;\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === prevQuery) {\n      return;\n    }\n\n    this.previousQueryResult = this.currentResult;\n    this.currentQuery = query;\n    this.initialDataUpdateCount = query.state.dataUpdateCount;\n    this.initialErrorUpdateCount = query.state.errorUpdateCount;\n    var willFetch = prevQuery ? this.willFetchOptionally() : this.willFetchOnMount();\n    this.updateResult(willFetch);\n\n    if (!this.hasListeners()) {\n      return;\n    }\n\n    prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n    this.currentQuery.addObserver(this);\n\n    if (this.shouldNotifyListeners(this.previousQueryResult, this.currentResult)) {\n      this.notify({\n        listeners: true\n      });\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    // Store current result and get new result\n    var prevResult = this.currentResult;\n    this.updateResult();\n    var currentResult = this.currentResult; // Update timers\n\n    this.updateTimers(); // Do not notify if the nothing has changed\n\n    if (prevResult === currentResult) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    if (this.shouldNotifyListeners(prevResult, currentResult)) {\n      notifyOptions.listeners = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this6 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this6.options.onSuccess == null ? void 0 : _this6.options.onSuccess(_this6.currentResult.data);\n        _this6.options.onSettled == null ? void 0 : _this6.options.onSettled(_this6.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this6.options.onError == null ? void 0 : _this6.options.onError(_this6.currentResult.error);\n        _this6.options.onSettled == null ? void 0 : _this6.options.onSettled(undefined, _this6.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this6.listeners.forEach(function (listener) {\n          listener(_this6.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this6.client.getQueryCache().notify(_this6.currentQuery);\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  } // Always set stale time when using suspense to prevent\n  // fetching again when directly re-mounting after suspense\n\n\n  if (defaultedOptions.suspense && typeof defaultedOptions.staleTime !== 'number') {\n    defaultedOptions.staleTime = 1000;\n  } // Create query observer\n\n\n  var observerRef = React.useRef();\n  var observer = observerRef.current || new Observer(queryClient, defaultedOptions);\n  observerRef.current = observer; // Update options\n\n  if (observer.hasListeners()) {\n    observer.setOptions(defaultedOptions);\n  }\n\n  var _React$useState = React.useState(function () {\n    return observer.getCurrentResult();\n  }),\n      currentResult = _React$useState[0],\n      setCurrentResult = _React$useState[1]; // Subscribe to the observer\n\n\n  React.useEffect(function () {\n    errorResetBoundary.clearReset();\n    return observer.subscribe(notifyManager.batchCalls(setCurrentResult));\n  }, [observer, errorResetBoundary]); // Handle suspense\n\n  if (observer.options.suspense || observer.options.useErrorBoundary) {\n    if (currentResult.isError && !errorResetBoundary.isReset() && !observer.getCurrentQuery().isFetching()) {\n      throw currentResult.error;\n    }\n\n    if (observer.options.suspense && currentResult.isLoading) {\n      errorResetBoundary.clearReset();\n      var unsubscribe = observer.subscribe();\n      throw observer.refetch().finally(unsubscribe);\n    }\n  }\n\n  return currentResult;\n}","if (process.env.NODE_ENV === 'production') {\n  module.exports = {\n    ReactQueryDevtools: function ReactQueryDevtools() {\n      return null;\n    },\n    ReactQueryDevtoolsPanel: function ReactQueryDevtoolsPanel() {\n      return null;\n    }\n  };\n} else {\n  module.exports = require('./development');\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport {\n  useQuery,\n  useQueryClient,\n  QueryClient,\n  QueryClientProvider,\n} from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  const [postId, setPostId] = React.useState(-1);\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <p>\n        As you visit the posts below, you will notice them in a loading state\n        the first time you load them. However, after you return to this list and\n        click on any posts you have already visited again, you will see them\n        load instantly and background refresh right before your eyes!{\" \"}\n        <strong>\n          (You may need to throttle your network speed to simulate longer\n          loading sequences)\n        </strong>\n      </p>\n      {postId > -1 ? (\n        <Post postId={postId} setPostId={setPostId} />\n      ) : (\n        <Posts setPostId={setPostId} />\n      )}\n      <ReactQueryDevtools initialIsOpen />\n    </QueryClientProvider>\n  );\n}\n\nfunction usePosts() {\n  return useQuery(\"posts\", async () => {\n    const { data } = await axios.get(\n      \"https://jsonplaceholder.typicode.com/posts\"\n    );\n    return data;\n  });\n}\n\nfunction Posts({ setPostId }) {\n  const queryClient = useQueryClient();\n  const { status, data, error, isFetching } = usePosts();\n\n  return (\n    <div>\n      <h1>Posts</h1>\n      <div>\n        {status === \"loading\" ? (\n          \"Loading...\"\n        ) : status === \"error\" ? (\n          <span>Error: {error.message}</span>\n        ) : (\n          <>\n            <div>\n              {data.map((post) => (\n                <p key={post.id}>\n                  <a\n                    onClick={() => setPostId(post.id)}\n                    href=\"#\"\n                    style={\n                      // We can access the query data here to show bold links for\n                      // ones that are cached\n                      queryClient.getQueryData([\"post\", post.id])\n                        ? {\n                            fontWeight: \"bold\",\n                            color: \"green\",\n                          }\n                        : {}\n                    }\n                  >\n                    {post.title}\n                  </a>\n                </p>\n              ))}\n            </div>\n            <div>{isFetching ? \"Background Updating...\" : \" \"}</div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst getPostById = async (id) => {\n  const { data } = await axios.get(\n    `https://jsonplaceholder.typicode.com/posts/${id}`\n  );\n  return data;\n};\n\nfunction usePost(postId) {\n  return useQuery([\"post\", postId], () => getPostById(postId), {\n    enabled: !!postId,\n  });\n}\n\nfunction Post({ postId, setPostId }) {\n  const { status, data, error, isFetching } = usePost(postId);\n\n  return (\n    <div>\n      <div>\n        <a onClick={() => setPostId(-1)} href=\"#\">\n          Back\n        </a>\n      </div>\n      {!postId || status === \"loading\" ? (\n        \"Loading...\"\n      ) : status === \"error\" ? (\n        <span>Error: {error.message}</span>\n      ) : (\n        <>\n          <h1>{data.title}</h1>\n          <div>\n            <p>{data.body}</p>\n          </div>\n          <div>{isFetching ? \"Background Updating...\" : \" \"}</div>\n        </>\n      )}\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n","import ReactDOM from 'react-dom';\nexport var unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates;","import { notifyManager } from '../core';\nimport { unstable_batchedUpdates } from './reactBatchedUpdates';\nnotifyManager.setBatchNotifyFunction(unstable_batchedUpdates);","export var logger = console;","import { setLogger } from '../core';\nimport { logger } from './logger';\n\nif (logger) {\n  setLogger(logger);\n}"],"sourceRoot":""}