{"version":3,"file":"index.development.js","sources":["../../src/index.tsx"],"sourcesContent":["import {\n  LoaderFn,\n  RouteMatch,\n  PartialGenerics,\n  DefaultGenerics,\n} from '@tanstack/react-location'\n\nexport type FetchPolicy = 'cache-and-network' | 'cache-first' | 'network-only'\n\nexport type SimpleCacheRecord<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n> = {\n  key: string\n  updatedAt: number\n  ready: boolean\n  data?: any\n  invalid?: boolean\n  match: RouteMatch<TGenerics>\n}\n\nexport type SimpleCacheRecords<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n> = Record<string, SimpleCacheRecord<TGenerics>>\n\n//\n\nexport class ReactLocationSimpleCache<\n  TDefualtGenerics extends PartialGenerics = DefaultGenerics,\n> {\n  records: SimpleCacheRecords<any> = {}\n\n  constructor() {}\n\n  createLoader<TGenerics extends TDefualtGenerics = TDefualtGenerics>(\n    loader: LoaderFn<TGenerics>,\n    opts?: {\n      key?: (match: RouteMatch<TGenerics>) => string\n      maxAge?: number\n      policy?: FetchPolicy\n    },\n  ): LoaderFn<TGenerics> {\n    const maxAge = opts?.maxAge ?? 0\n    const policy = opts?.policy ?? 'cache-and-network'\n\n    const cachedLoader: LoaderFn<TGenerics> = async (match, loaderOptions) => {\n      // Cache on pathname\n      const key = opts?.key ? opts.key(match) : match.pathname\n\n      // No cache? Create it.\n      if (!this.records[key]) {\n        this.records[key] = {\n          key,\n          updatedAt: 0,\n          ready: false,\n          match,\n        }\n      }\n\n      const entry = this.records[key]!\n\n      Object.assign(entry, {\n        match,\n        loaderOptions,\n      })\n\n      const doFetch = async () => {\n        loaderOptions.dispatch({ type: 'loading' })\n        try {\n          const data = await loader(match, loaderOptions)\n          entry.updatedAt = Date.now()\n          entry.ready = true\n          entry.data = data\n          loaderOptions.dispatch({ type: 'resolve', data })\n          return data\n        } catch (err) {\n          loaderOptions.dispatch({ type: 'reject', error: err })\n          throw err\n        }\n      }\n\n      if (policy === 'network-only') {\n        return await doFetch()\n      }\n\n      if (!entry.updatedAt) {\n        await doFetch()\n      }\n\n      if (policy === 'cache-first') {\n        return entry.data\n      }\n\n      if (Date.now() - entry.updatedAt > maxAge) {\n        doFetch()\n      }\n\n      return entry.data\n    }\n\n    return cachedLoader\n  }\n  filter<TGenerics extends TDefualtGenerics = TDefualtGenerics>(\n    fn: (record: SimpleCacheRecord<TGenerics>) => any,\n  ): SimpleCacheRecord<TGenerics>[] {\n    return Object.keys(this.records)\n      .filter((key) => fn(this.records[key]!))\n      .map((d) => this.records[d]) as SimpleCacheRecord<TGenerics>[]\n  }\n  find<TGenerics extends TDefualtGenerics = TDefualtGenerics>(\n    fn: (record: SimpleCacheRecord<TGenerics>) => any,\n  ): SimpleCacheRecord<TGenerics> | undefined {\n    return this.filter<TGenerics>(fn)[0]\n  }\n  invalidate<TGenerics extends TDefualtGenerics = TDefualtGenerics>(\n    fn: (record: SimpleCacheRecord<TGenerics>) => any,\n  ) {\n    const records = this.filter(fn)\n    records.forEach((record) => {\n      record.invalid = true\n    })\n  }\n  removeAll() {\n    this.records = {}\n  }\n  remove<TGenerics extends TDefualtGenerics = TDefualtGenerics>(\n    fn: (record: SimpleCacheRecord<TGenerics>) => any,\n  ) {\n    this.filter(fn).forEach((record) => {\n      delete this.records[record.key]\n    })\n  }\n}\n"],"names":["ReactLocationSimpleCache","records","createLoader","loader","opts","maxAge","policy","cachedLoader","match","loaderOptions","key","pathname","updatedAt","ready","entry","Object","assign","doFetch","dispatch","type","data","Date","now","error","filter","fn","keys","map","d","find","invalidate","forEach","record","invalid","removeAll","remove"],"mappings":"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"}