{"version":3,"file":"index.development.js","sources":["../../src/index.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport {\n  createHashHistory,\n  createBrowserHistory,\n  createMemoryHistory,\n  BrowserHistory,\n  MemoryHistory,\n  History,\n  HashHistory,\n} from 'history'\n\nexport { createHashHistory, createBrowserHistory, createMemoryHistory }\n\n// Types\n\ntype Timeout = ReturnType<typeof setTimeout>\n\ntype Maybe<T, TUnknown> = T extends {} ? T : TUnknown\n\nexport type DefaultGenerics = {\n  Params: Params<string>\n  Search: Search<unknown>\n  RouteMeta: RouteMeta<unknown>\n}\n\nexport type PartialGenerics = Partial<DefaultGenerics>\nexport type MakeGenerics<TGenerics extends PartialGenerics> = TGenerics\n\nexport type Search<T> = Record<string, T>\nexport type Params<T> = Record<string, T>\nexport type RouteMeta<T> = Record<string, T>\n\nexport type UseGeneric<\n  TGenerics extends PartialGenerics,\n  TGeneric extends keyof PartialGenerics,\n> = TGeneric extends 'Search'\n  ? Partial<Maybe<TGenerics[TGeneric], DefaultGenerics[TGeneric]>>\n  : Maybe<TGenerics[TGeneric], DefaultGenerics[TGeneric]>\n\nexport type ReactLocationOptions = {\n  // The history object to be used internally by react-location\n  // A history will be created automatically if not provided.\n  history?: BrowserHistory | MemoryHistory | HashHistory\n  stringifySearch?: SearchSerializer\n  parseSearch?: SearchParser\n}\n\ntype SearchSerializer = (searchObj: Record<string, any>) => string\ntype SearchParser = (searchStr: string) => Record<string, any>\n\nexport type Updater<TResult> = TResult | ((prev?: TResult) => TResult)\n\nexport type Location<TGenerics extends PartialGenerics = DefaultGenerics> = {\n  href: string\n  pathname: string\n  search: UseGeneric<TGenerics, 'Search'>\n  searchStr: string\n  hash: string\n  key?: string\n  // nextAction?: 'push' | 'replace'\n}\n\nexport type Route<TGenerics extends PartialGenerics = DefaultGenerics> = {\n  // The path to match (relative to the nearest parent `Route` component or root basepath)\n  path?: string\n  // An ID to uniquely identify this route within its siblings. This is only required for routes that *only match on search* or if you have multiple routes with the same path\n  id?: string\n  // If true, this route will be matched as case-sensitive\n  caseSensitive?: boolean\n  // Either (1) an object that will be used to shallowly match the current location's search or (2) A function that receives the current search params and can return truthy if they are matched.\n  search?: SearchPredicate<UseGeneric<TGenerics, 'Search'>>\n  // The duration to wait during `loader` execution before showing the `pendingElement`\n  searchFilters?: SearchFilter<TGenerics>[]\n  // An array of child routes\n  children?: Route<TGenerics>[]\n  // Route Loaders (see below) can be inline on the route, or resolved async\n  pendingElement?: React.ReactNode\n} & RouteLoaders<TGenerics>\n\nexport type RouteLoaders<TGenerics> = {\n  // The content to be rendered when the route is matched. If no element is provided, defaults to `<Outlet />`\n  element?: React.ReactNode\n  // An asynchronous function responsible for preparing or fetching data for the route before it is rendered\n  // An object of whatever you want! This object is accessible anywhere matches are.\n  meta?: UseGeneric<TGenerics, 'RouteMeta'>\n}\n\nexport type SearchFilter<TGenerics> = (\n  prev: UseGeneric<TGenerics, 'Search'>,\n  next: UseGeneric<TGenerics, 'Search'>,\n) => UseGeneric<TGenerics, 'Search'>\n\nexport type MatchLocation<TGenerics extends PartialGenerics = DefaultGenerics> =\n  {\n    to?: string | number | null\n    search?: SearchPredicate<UseGeneric<TGenerics, 'Search'>>\n    fuzzy?: boolean\n    caseSensitive?: boolean\n  }\n\nexport type SearchPredicate<TSearch> = (search: TSearch) => any\n\nexport type ListenerFn = () => void\n\nexport type Segment = {\n  type: 'pathname' | 'param' | 'wildcard'\n  value: string\n}\n\nexport type RouterProps<TGenerics extends PartialGenerics = DefaultGenerics> = {\n  // Children will default to `<Outlet />` if not provided\n  children?: React.ReactNode\n  location: ReactLocation<TGenerics>\n} & RouterOptions<TGenerics>\n\nexport type RouterOptions<TGenerics> = {\n  // An array of route objects to match\n  routes: Route<TGenerics>[]\n  basepath?: string\n  filterRoutes?: FilterRoutesFn\n  useErrorBoundary?: boolean\n  defaultElement?: React.ReactNode\n  defaultPendingElement?: React.ReactNode\n  caseSensitive?: boolean\n  // An array of route match objects that have been both _matched_ and _loaded_. See the [SRR](#ssr) section for more details\n  // snapshot?: RouterSnapshot<TGenerics>\n}\n\nexport type BuildNextOptions<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n> = {\n  to?: string | number | null\n  search?: true | Updater<UseGeneric<TGenerics, 'Search'>>\n  hash?: Updater<string>\n  from?: Partial<Location<TGenerics>>\n  key?: string\n  __searchFilters?: SearchFilter<TGenerics>[]\n}\n\nexport type NavigateOptions<TGenerics> = BuildNextOptions<TGenerics> & {\n  replace?: boolean\n  fromCurrent?: boolean\n}\n\nexport type PromptProps = {\n  message: string\n  when?: boolean | any\n  children?: React.ReactNode\n}\n\nexport type LinkProps<TGenerics extends PartialGenerics = DefaultGenerics> =\n  Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, 'href' | 'children'> & {\n    // The absolute or relative destination pathname\n    to?: string | number | null\n    // The new search object or a function to update it\n    search?: true | Updater<UseGeneric<TGenerics, 'Search'>>\n    // The new has string or a function to update it\n    hash?: Updater<string>\n    // Whether to replace the current history stack instead of pushing a new one\n    replace?: boolean\n    // A function that is passed the [Location API](#location-api) and returns additional props for the `active` state of this link. These props override other props passed to the link (`style`'s are merged, `className`'s are concatenated)\n    getActiveProps?: () => Record<string, any>\n    // A function that is passed the [Location API](#location-api) and returns additional props for the `inactive` state of this link. These props override other props passed to the link (`style`'s are merged, `className`'s are concatenated)\n    getInactiveProps?: () => Record<string, any>\n    // Defaults to `{ exact: false, includeHash: false }`\n    activeOptions?: ActiveOptions\n    // If true, will render the link without the href attribute\n    disabled?: boolean\n    // A custom ref prop because of this: https://stackoverflow.com/questions/58469229/react-with-typescript-generics-while-using-react-forwardref/58473012\n    _ref?: React.Ref<HTMLAnchorElement>\n    // If a function is pass as a child, it will be given the `isActive` boolean to aid in further styling on the element it returns\n    children?:\n      | React.ReactNode\n      | ((state: { isActive: boolean }) => React.ReactNode)\n  }\n\ntype ActiveOptions = {\n  exact?: boolean\n  includeHash?: boolean\n}\n\nexport type LinkPropsType<TGenerics extends PartialGenerics = DefaultGenerics> =\n  LinkProps<TGenerics>\n\nexport type TransitionState<TGenerics> = {\n  location: Location<TGenerics>\n  matches: RouteMatch<TGenerics>[]\n}\n\nexport type FilterRoutesFn = <\n  TGenerics extends PartialGenerics = DefaultGenerics,\n>(\n  routes: Route<TGenerics>[],\n) => Route<TGenerics>[]\n\nexport type RouterPropsType<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n> = RouterProps<TGenerics>\n\nexport type RouterType<TGenerics extends PartialGenerics = DefaultGenerics> = (\n  props: RouterProps<TGenerics>,\n) => JSX.Element\n\ntype Listener = () => void\n\n// Source\n\nconst LocationContext = React.createContext<{ location: ReactLocation<any> }>(\n  null!,\n)\nconst MatchesContext = React.createContext<RouteMatch<any>[]>(null!)\nconst routerContext = React.createContext<\n  RouterInstance<any> & { state: TransitionState<any> }\n>(null!)\n\n// Detect if we're in the DOM\nconst isDOM = Boolean(\n  typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement,\n)\n\nconst useLayoutEffect = isDOM ? React.useLayoutEffect : React.useEffect\n\n// This is the default history object if none is defined\nconst createDefaultHistory = () =>\n  isDOM ? createBrowserHistory() : createMemoryHistory()\n\nexport class ReactLocation<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n> {\n  history: BrowserHistory | MemoryHistory\n  stringifySearch: SearchSerializer\n  parseSearch: SearchParser\n\n  current: Location<TGenerics>\n  destroy: () => void\n  navigateTimeout?: Timeout\n  nextAction?: 'push' | 'replace'\n\n  //\n\n  listeners: Listener[] = []\n  isTransitioning: boolean = false\n\n  constructor(options?: ReactLocationOptions) {\n    this.history = options?.history || createDefaultHistory()\n    this.stringifySearch = options?.stringifySearch ?? defaultStringifySearch\n    this.parseSearch = options?.parseSearch ?? defaultParseSearch\n\n    this.current = this.parseLocation(this.history.location)\n\n    this.destroy = this.history.listen((event) => {\n      this.current = this.parseLocation(event.location, this.current)\n      this.notify()\n    })\n  }\n\n  subscribe(listener: Listener): () => void {\n    this.listeners.push(listener as Listener)\n\n    return () => {\n      this.listeners = this.listeners.filter((x) => x !== listener)\n    }\n  }\n\n  notify(): void {\n    this.listeners.forEach((listener) => listener())\n  }\n\n  buildNext(\n    basepath: string = '/',\n    dest: BuildNextOptions<TGenerics> = {},\n  ): Location<TGenerics> {\n    const from = {\n      ...this.current,\n      ...dest.from,\n    }\n\n    const pathname = resolvePath(basepath, from.pathname, `${dest.to ?? '.'}`)\n\n    const updatedSearch =\n      (dest.search === true\n        ? from.search\n        : functionalUpdate(dest.search, from.search)) ?? {}\n\n    const filteredSearch = dest.__searchFilters?.length\n      ? dest.__searchFilters.reduce(\n          (prev, next) => next(prev, updatedSearch),\n          from.search,\n        )\n      : updatedSearch\n\n    const search = replaceEqualDeep(from.search, filteredSearch)\n\n    const searchStr = this.stringifySearch(search)\n    let hash = functionalUpdate(dest.hash, from.hash)\n    hash = hash ? `#${hash}` : ''\n\n    return {\n      pathname,\n      search,\n      searchStr,\n      hash,\n      href: `${pathname}${searchStr}${hash}`,\n      key: dest.key,\n    }\n  }\n\n  navigate(next: Location<TGenerics>, replace?: boolean): void {\n    this.current = next\n\n    if (this.navigateTimeout) clearTimeout(this.navigateTimeout)\n\n    let nextAction: 'push' | 'replace' = 'replace'\n\n    if (!replace) {\n      nextAction = 'push'\n    }\n\n    const isSameUrl =\n      this.parseLocation(this.history.location).href === this.current.href\n\n    if (isSameUrl && !this.current.key) {\n      nextAction = 'replace'\n    }\n\n    if (nextAction === 'replace') {\n      return this.history.replace({\n        pathname: this.current.pathname,\n        hash: this.current.hash,\n        search: this.current.searchStr,\n      })\n    }\n\n    return this.history.push({\n      pathname: this.current.pathname,\n      hash: this.current.hash,\n      search: this.current.searchStr,\n    })\n    // }, 16)\n  }\n\n  parseLocation(\n    location: History['location'],\n    previousLocation?: Location<TGenerics>,\n  ): Location<TGenerics> {\n    const parsedSearch = this.parseSearch(location.search)\n\n    return {\n      pathname: location.pathname,\n      searchStr: location.search,\n      search: replaceEqualDeep(previousLocation?.search, parsedSearch),\n      hash: location.hash.split('#').reverse()[0] ?? '',\n      href: `${location.pathname}${location.search}${location.hash}`,\n      key: location.key,\n    }\n  }\n}\n\nexport type MatchesProviderProps<TGenerics> = {\n  value: RouteMatch<TGenerics>[]\n  children: React.ReactNode\n}\n\nexport function MatchesProvider<TGenerics>(\n  props: MatchesProviderProps<TGenerics>,\n) {\n  return <MatchesContext.Provider {...props} />\n}\n\nexport type RouterInstance<TGenerics> = {\n  routesById: Record<string, Route<TGenerics>>\n  basepath: string\n  rootMatch?: RouteMatch<TGenerics>\n  routes: Route<TGenerics>[]\n  filterRoutes?: FilterRoutesFn\n  useErrorBoundary?: boolean\n  defaultElement?: React.ReactNode\n  defaultPendingElement?: React.ReactNode\n  caseSensitive?: boolean\n  state: TransitionState<TGenerics>\n}\n\nexport function Router<TGenerics extends PartialGenerics = DefaultGenerics>({\n  children,\n  location,\n  routes,\n  basepath: userBasepath,\n  // snapshot,\n  ...rest\n}: RouterProps<TGenerics>) {\n  const basepath = cleanPath(`/${userBasepath ?? ''}`)\n\n  const [routerState, setRouterState] = React.useState<\n    TransitionState<TGenerics>\n  >({\n    location: location.current,\n    matches: [],\n  })\n\n  const rootMatch = React.useMemo(\n    () => ({\n      id: 'root',\n      params: {} as any,\n      search: {} as any,\n      pathname: basepath,\n      route: null!,\n    }),\n    [basepath],\n  )\n\n  const router: RouterInstance<TGenerics> = React.useMemo(() => {\n    const routesById: RouterInstance<TGenerics>['routesById'] = {}\n\n    const recurseRoutes = (\n      routes: Route<TGenerics>[],\n      parent?: Route<TGenerics>,\n    ): Route<TGenerics>[] => {\n      return routes.map((route) => {\n        const path = route.path ?? '*'\n\n        const id = joinPaths([\n          parent?.id === 'root' ? '' : parent?.id,\n          `${path?.replace(/(.)\\/$/, '$1')}${route.id ? `-${route.id}` : ''}`,\n        ])\n\n        route = {\n          ...route,\n          id,\n        }\n\n        if (routesById[id]) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\n              `Duplicate routes found with id: ${id}`,\n              routesById,\n              route,\n            )\n          }\n          throw new Error()\n        }\n\n        routesById[id] = route\n\n        route.children = route.children?.length\n          ? recurseRoutes(route.children, route)\n          : undefined\n\n        return route\n      })\n    }\n\n    routes = recurseRoutes(routes)\n\n    return {\n      ...rest,\n      routesById,\n      routes,\n      basepath,\n      rootMatch,\n      state: routerState,\n    }\n  }, [routerState, rootMatch, basepath])\n\n  console.log(router.state)\n\n  useLayoutEffect(() => {\n    const update = () => {\n      const matches = matchRoutes(router, location.current)\n\n      setRouterState(() => {\n        return {\n          location: location.current,\n          matches: matches,\n        }\n      })\n    }\n\n    update()\n\n    return location.subscribe(update)\n  }, [location.current.key])\n\n  return (\n    <LocationContext.Provider value={{ location }}>\n      <routerContext.Provider value={router}>\n        <MatchesProvider value={[router.rootMatch!, ...router.state.matches]}>\n          {children ?? <Outlet />}\n        </MatchesProvider>\n      </routerContext.Provider>\n    </LocationContext.Provider>\n  )\n}\n\nexport type UseLocationType<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n> = () => ReactLocation<TGenerics>\n\nexport function useLocation<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n>(): ReactLocation<TGenerics> {\n  const context = React.useContext(LocationContext) as {\n    location: ReactLocation<TGenerics>\n  }\n  warning(!!context, 'useLocation must be used within a <ReactLocation />')\n\n  return context.location\n}\n\ntype RouteMatch<TGenerics extends PartialGenerics = DefaultGenerics> = {\n  id: string\n  route: Route<TGenerics>\n  pathname: string\n  params: UseGeneric<TGenerics, 'Params'>\n  search: UseGeneric<TGenerics, 'Search'>\n}\n\nexport type UseRouterType<TGenerics extends PartialGenerics = DefaultGenerics> =\n  () => RouterInstance<TGenerics>\n\nexport function useRouter<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n>(): RouterInstance<TGenerics> {\n  const value = React.useContext(routerContext)\n  if (!value) {\n    warning(true, 'You are trying to use useRouter() outside of ReactLocation!')\n    throw new Error()\n  }\n\n  return value as RouterInstance<TGenerics>\n}\n\nexport type MatchRoutesType<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n> = (\n  router: RouterInstance<TGenerics>[],\n  currentLocation: Location<TGenerics>,\n) => Promise<RouteMatch<TGenerics>[]>\n\nexport function matchRoutes<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n>(\n  router: RouterInstance<TGenerics>,\n  currentLocation: Location<TGenerics>,\n): RouteMatch<TGenerics>[] {\n  if (!router.routes.length) {\n    return []\n  }\n\n  const matches: RouteMatch<TGenerics>[] = []\n\n  const recurse = (\n    routes: Route<TGenerics>[],\n    parentMatch: RouteMatch<TGenerics>,\n  ) => {\n    let { pathname, params } = parentMatch\n    const filteredRoutes = router?.filterRoutes\n      ? router?.filterRoutes(routes)\n      : routes\n\n    const route = filteredRoutes.find((route) => {\n      const fullRoutePathName = joinPaths([pathname, route.path])\n\n      const fuzzy = !!(route.path !== '/' || route.children?.length)\n\n      const matchParams = matchRoute(currentLocation, {\n        to: fullRoutePathName,\n        search: route.search,\n        fuzzy,\n        caseSensitive: route.caseSensitive ?? router.caseSensitive,\n      })\n\n      if (matchParams) {\n        params = {\n          ...params,\n          ...matchParams,\n        }\n      }\n\n      return !!matchParams\n    })\n\n    if (!route) {\n      return\n    }\n\n    const interpolatedPath = interpolatePath(route.path, params)\n    pathname = joinPaths([pathname, interpolatedPath])\n\n    const interpolatedId = interpolatePath(route.id, params, true)\n\n    const match: RouteMatch<TGenerics> = {\n      id: interpolatedId,\n      route,\n      params,\n      pathname,\n      search: currentLocation.search,\n    }\n\n    matches.push(match)\n\n    if (route.children?.length) {\n      recurse(route.children, match)\n    }\n  }\n\n  recurse(router.routes, router.rootMatch!)\n\n  return matches\n}\n\nfunction interpolatePath(\n  path: string | undefined,\n  params: any,\n  leaveWildcard?: boolean,\n) {\n  const interpolatedPathSegments = parsePathname(path)\n\n  return joinPaths(\n    interpolatedPathSegments.map((segment) => {\n      if (segment.value === '*' && !leaveWildcard) {\n        return ''\n      }\n\n      if (segment.type === 'param') {\n        return params![segment.value.substring(1)] ?? ''\n      }\n\n      return segment.value\n    }),\n  )\n}\n\nexport type UseMatchesType<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n> = () => RouteMatch<TGenerics>[]\n\nexport function useParentMatches<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n>(): RouteMatch<TGenerics>[] {\n  const router = useRouter<TGenerics>()\n  const match = useMatch()\n\n  const matches = router.state.matches\n\n  return matches.slice(0, matches.findIndex((d) => d.id === match.id) - 1)\n}\n\nexport function useMatches<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n>(): RouteMatch<TGenerics>[] {\n  return React.useContext(MatchesContext)\n}\n\nexport type UseMatchType<TGenerics extends PartialGenerics = DefaultGenerics> =\n  () => RouteMatch<TGenerics>\n\nexport function useMatch<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n>(): RouteMatch<TGenerics> {\n  return useMatches<TGenerics>()?.[0]!\n}\n\nexport type UseNavigateType<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n> = (options: NavigateOptions<TGenerics>) => void\n\nexport function useNavigate<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n>() {\n  const location = useLocation<TGenerics>()\n  const match = useMatch<TGenerics>()\n  const buildNext = useBuildNext<TGenerics>()\n\n  function navigate({\n    search,\n    hash,\n    replace,\n    from,\n    to,\n    fromCurrent,\n  }: NavigateOptions<TGenerics> & {\n    replace?: boolean\n  }) {\n    fromCurrent = fromCurrent ?? typeof to === 'undefined'\n\n    const next = buildNext({\n      to,\n      search,\n      hash,\n      from: fromCurrent\n        ? location.current\n        : from ?? { pathname: match.pathname },\n    })\n\n    location.navigate(next, replace)\n  }\n\n  return useLatestCallback(navigate)\n}\n\nexport type NavigateType<TGenerics extends PartialGenerics = DefaultGenerics> =\n  (options: NavigateOptions<TGenerics>) => null\n\nexport function Navigate<TGenerics extends PartialGenerics = DefaultGenerics>(\n  options: NavigateOptions<TGenerics>,\n) {\n  let navigate = useNavigate<TGenerics>()\n\n  useLayoutEffect(() => {\n    navigate(options)\n  }, [navigate])\n\n  return null\n}\n\nfunction useBuildNext<TGenerics>() {\n  const location = useLocation<TGenerics>()\n  const router = useRouter<TGenerics>()\n\n  const buildNext = (opts: BuildNextOptions<TGenerics>) => {\n    const next = location.buildNext(router.basepath, opts)\n\n    const matches = matchRoutes<TGenerics>(router, next)\n\n    const __searchFilters = matches\n      .map((match) => match.route.searchFilters ?? [])\n      .flat()\n      .filter(Boolean)\n\n    return location.buildNext(router.basepath, { ...opts, __searchFilters })\n  }\n\n  return useLatestCallback(buildNext)\n}\n\nexport type LinkType<TGenerics extends PartialGenerics = DefaultGenerics> = (\n  props: LinkProps<TGenerics>,\n) => JSX.Element\n\nexport const Link = function Link<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n>({\n  to = '.',\n  search,\n  hash,\n  children,\n  target,\n  style = {},\n  replace,\n  onClick,\n  onMouseEnter,\n  className = '',\n  getActiveProps = () => ({}),\n  getInactiveProps = () => ({}),\n  activeOptions,\n  disabled,\n  _ref,\n  ...rest\n}: LinkProps<TGenerics>) {\n  const match = useMatch<TGenerics>()\n  const location = useLocation<TGenerics>()\n  const navigate = useNavigate<TGenerics>()\n  const buildNext = useBuildNext<TGenerics>()\n\n  // If this `to` is a valid external URL, log a warning\n  try {\n    const url = new URL(`${to}`)\n    warning(\n      false,\n      `<Link /> should not be used for external URLs like: ${url.href}`,\n    )\n  } catch (e) {}\n\n  const next = buildNext({\n    to,\n    search,\n    hash,\n    from: { pathname: match.pathname },\n  })\n\n  // The click handler\n  const handleClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    if (onClick) onClick(e)\n\n    if (\n      !isCtrlEvent(e) &&\n      !e.defaultPrevented &&\n      (!target || target === '_self') &&\n      e.button === 0\n    ) {\n      e.preventDefault()\n      // All is well? Navigate!\n      navigate({\n        to,\n        search,\n        hash,\n        replace,\n        from: { pathname: match.pathname },\n      })\n    }\n  }\n\n  // Compare path/hash for matches\n  const pathIsEqual = location.current.pathname === next.pathname\n  const currentPathSplit = location.current.pathname.split('/')\n  const nextPathSplit = next.pathname.split('/')\n  const pathIsFuzzyEqual = nextPathSplit.every(\n    (d, i) => d === currentPathSplit[i],\n  )\n  const hashIsEqual = location.current.hash === next.hash\n\n  // Combine the matches based on user options\n  const pathTest = activeOptions?.exact ? pathIsEqual : pathIsFuzzyEqual\n  const hashTest = activeOptions?.includeHash ? hashIsEqual : true\n\n  // The final \"active\" test\n  const isActive = pathTest && hashTest\n\n  // Get the active props\n  const {\n    style: activeStyle = {},\n    className: activeClassName = '',\n    ...activeRest\n  } = isActive ? getActiveProps() : {}\n\n  // Get the inactive props\n  const {\n    style: inactiveStyle = {},\n    className: inactiveClassName = '',\n    ...inactiveRest\n  } = isActive ? {} : getInactiveProps()\n\n  return (\n    <a\n      {...{\n        ref: _ref,\n        href: disabled ? undefined : next.href,\n        onClick: handleClick,\n        target,\n        style: {\n          ...style,\n          ...activeStyle,\n          ...inactiveStyle,\n        },\n        className:\n          [className, activeClassName, inactiveClassName]\n            .filter(Boolean)\n            .join(' ') || undefined,\n        ...(disabled\n          ? {\n              role: 'link',\n              'aria-disabled': true,\n            }\n          : undefined),\n        ...rest,\n        ...activeRest,\n        ...inactiveRest,\n        children:\n          typeof children === 'function' ? children({ isActive }) : children,\n      }}\n    />\n  )\n}\n\nexport function Outlet<TGenerics extends PartialGenerics = DefaultGenerics>() {\n  const router = useRouter<TGenerics>()\n  const [_, ...matches] = useMatches<TGenerics>()\n\n  const match = matches[0]\n\n  if (!match) {\n    return null\n  }\n\n  const matchElement = match.route.element ?? router.defaultElement\n\n  const element = (\n    <MatchesProvider value={matches}>\n      {matchElement ?? <Outlet />}\n    </MatchesProvider>\n  )\n\n  const pendingElement =\n    match.route.pendingElement ?? router.defaultPendingElement\n\n  if (pendingElement) {\n    return <React.Suspense fallback={pendingElement}>{element}</React.Suspense>\n  }\n\n  return element\n}\n\nexport function useResolvePath<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n>() {\n  const router = useRouter<TGenerics>()\n  const match = useMatch<TGenerics>()\n\n  return useLatestCallback((path: string) =>\n    resolvePath(router.basepath!, match.pathname!, cleanPath(path)),\n  )\n}\n\nexport type UseSearchType<TGenerics extends PartialGenerics = DefaultGenerics> =\n  () => Partial<Maybe<TGenerics['Search'], Search<any>>>\n\nexport function useSearch<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n>() {\n  const location = useLocation<TGenerics>()\n  return location.current.search\n}\n\nexport type MatchRouteType<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n> = (\n  currentLocation: Location<TGenerics>,\n  matchLocation: MatchLocation<TGenerics>,\n) => UseGeneric<TGenerics, 'Params'> | undefined\n\nexport function matchRoute<TGenerics extends PartialGenerics = DefaultGenerics>(\n  currentLocation: Location<TGenerics>,\n  matchLocation: MatchLocation<TGenerics>,\n): UseGeneric<TGenerics, 'Params'> | undefined {\n  const pathParams = matchByPath(currentLocation, matchLocation)\n  const searchMatched = matchBySearch(currentLocation, matchLocation)\n\n  if (matchLocation.to && !pathParams) {\n    return\n  }\n\n  if (matchLocation.search && !searchMatched) {\n    return\n  }\n\n  return (pathParams ?? {}) as UseGeneric<TGenerics, 'Params'>\n}\n\nexport type UseMatchRouteType<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n> = () => (\n  matchLocation: MatchLocation<TGenerics>,\n) => Maybe<TGenerics['Params'], Params<any>> | undefined\n\nexport function useMatchRoute<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n>(): (\n  matchLocation: MatchLocation<TGenerics>,\n  opts?: { caseSensitive?: boolean },\n) => Maybe<TGenerics['Params'], Params<any>> | undefined {\n  const router = useRouter<TGenerics>()\n  const resolvePath = useResolvePath<TGenerics>()\n\n  return useLatestCallback(\n    (matchLocation: MatchLocation<TGenerics> & { pending?: boolean }) => {\n      matchLocation = {\n        ...matchLocation,\n        to: matchLocation.to ? resolvePath(`${matchLocation.to}`) : undefined,\n      }\n\n      return matchRoute(router.state.location, matchLocation)\n    },\n  )\n}\n\nexport function MatchRoute<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n>({\n  children,\n  ...rest\n}: MatchLocation<TGenerics> & {\n  children:\n    | React.ReactNode\n    | ((isNextLocation?: Params<TGenerics>) => React.ReactNode)\n}) {\n  const matchRoute = useMatchRoute<TGenerics>()\n  const match = matchRoute(rest)\n\n  if (typeof children === 'function') {\n    return children(match as any)\n  }\n\n  return match ? children : null\n}\n\nexport function usePrompt(message: string, when: boolean | any): void {\n  const location = useLocation()\n\n  React.useEffect(() => {\n    if (!when) return\n\n    let unblock = location.history.block((transition) => {\n      if (window.confirm(message)) {\n        unblock()\n        transition.retry()\n      } else {\n        location.current.pathname = window.location.pathname\n      }\n    })\n\n    return unblock\n  }, [when, location, message])\n}\n\nexport function Prompt({ message, when, children }: PromptProps) {\n  usePrompt(message, when ?? true)\n  return (children ?? null) as React.ReactNode\n}\n\nfunction warning(cond: boolean, message: string) {\n  if (!cond) {\n    if (typeof console !== 'undefined') console.warn(message)\n\n    try {\n      throw new Error(message)\n    } catch {}\n  }\n}\n\nfunction isFunction(d: any): d is Function {\n  return typeof d === 'function'\n}\n\nexport function functionalUpdate<TResult>(\n  updater?: Updater<TResult>,\n  previous?: TResult,\n) {\n  if (isFunction(updater)) {\n    return updater(previous as TResult)\n  }\n\n  return updater\n}\n\nfunction joinPaths(paths: (string | undefined)[]) {\n  return cleanPath(paths.filter(Boolean).join('/'))\n}\n\nexport function cleanPath(path: string) {\n  // remove double slashes\n  return `${path}`.replace(/\\/{2,}/g, '/')\n}\n\nexport function matchByPath<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n>(\n  currentLocation: Location<TGenerics>,\n  matchLocation: MatchLocation<TGenerics>,\n): UseGeneric<TGenerics, 'Params'> | undefined {\n  const baseSegments = parsePathname(currentLocation.pathname)\n  const routeSegments = parsePathname(`${matchLocation.to ?? '*'}`)\n\n  const params: Record<string, string> = {}\n\n  let isMatch = (() => {\n    for (\n      let i = 0;\n      i < Math.max(baseSegments.length, routeSegments.length);\n      i++\n    ) {\n      const baseSegment = baseSegments[i]\n      const routeSegment = routeSegments[i]\n\n      const isLastRouteSegment = i === routeSegments.length - 1\n      const isLastBaseSegment = i === baseSegments.length - 1\n\n      if (routeSegment) {\n        if (routeSegment.type === 'wildcard') {\n          if (baseSegment?.value) {\n            params['*'] = joinPaths(baseSegments.slice(i).map((d) => d.value))\n            return true\n          }\n          return false\n        }\n\n        if (routeSegment.type === 'pathname') {\n          if (routeSegment.value === '/' && !baseSegment?.value) {\n            return true\n          }\n\n          if (baseSegment) {\n            if (matchLocation.caseSensitive) {\n              if (routeSegment.value !== baseSegment.value) {\n                return false\n              }\n            } else if (\n              routeSegment.value.toLowerCase() !==\n              baseSegment.value.toLowerCase()\n            ) {\n              return false\n            }\n          }\n        }\n\n        if (!baseSegment) {\n          return false\n        }\n\n        if (routeSegment.type === 'param') {\n          params[routeSegment.value.substring(1)] = baseSegment.value\n        }\n      }\n\n      if (isLastRouteSegment && !isLastBaseSegment) {\n        return !!matchLocation.fuzzy\n      }\n    }\n    return true\n  })()\n\n  return isMatch ? (params as UseGeneric<TGenerics, 'Params'>) : undefined\n}\n\nfunction matchBySearch<TGenerics extends PartialGenerics = DefaultGenerics>(\n  currentLocation: Location<TGenerics>,\n  matchLocation: MatchLocation<TGenerics>,\n) {\n  return !!(\n    matchLocation.search && matchLocation.search(currentLocation.search)\n  )\n}\n\nexport function parsePathname(pathname?: string): Segment[] {\n  if (!pathname) {\n    return []\n  }\n\n  pathname = cleanPath(pathname)\n\n  const segments: Segment[] = []\n\n  if (pathname.slice(0, 1) === '/') {\n    pathname = pathname.substring(1)\n    segments.push({\n      type: 'pathname',\n      value: '/',\n    })\n  }\n\n  if (!pathname) {\n    return segments\n  }\n\n  // Remove empty segments and '.' segments\n  const split = pathname.split('/').filter(Boolean)\n\n  segments.push(\n    ...split.map((part): Segment => {\n      if (part.startsWith('*')) {\n        return {\n          type: 'wildcard',\n          value: part,\n        }\n      }\n\n      if (part.charAt(0) === ':') {\n        return {\n          type: 'param',\n          value: part,\n        }\n      }\n\n      return {\n        type: 'pathname',\n        value: part,\n      }\n    }),\n  )\n\n  if (pathname.slice(-1) === '/') {\n    pathname = pathname.substring(1)\n    segments.push({\n      type: 'pathname',\n      value: '/',\n    })\n  }\n\n  return segments\n}\n\nexport function resolvePath(basepath: string, base: string, to: string) {\n  base = base.replace(new RegExp(`^${basepath}`), '/')\n  to = to.replace(new RegExp(`^${basepath}`), '/')\n\n  let baseSegments = parsePathname(base)\n  const toSegments = parsePathname(to)\n\n  toSegments.forEach((toSegment, index) => {\n    if (toSegment.value === '/') {\n      if (!index) {\n        // Leading slash\n        baseSegments = [toSegment]\n      } else if (index === toSegments.length - 1) {\n        // Trailing Slash\n        baseSegments.push(toSegment)\n      } else {\n        // ignore inter-slashes\n      }\n    } else if (toSegment.value === '..') {\n      baseSegments.pop()\n    } else if (toSegment.value === '.') {\n      return\n    } else {\n      baseSegments.push(toSegment)\n    }\n  })\n\n  const joined = joinPaths([basepath, ...baseSegments.map((d) => d.value)])\n\n  return cleanPath(joined)\n}\n\nfunction isCtrlEvent(e: React.MouseEvent) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\n}\n\nfunction useLatestCallback<TCallback extends (...args: any[]) => any>(\n  cb: TCallback,\n) {\n  const stableFnRef =\n    React.useRef<(...args: Parameters<TCallback>) => ReturnType<TCallback>>()\n  const cbRef = React.useRef<TCallback>(cb)\n\n  cbRef.current = cb\n\n  if (!stableFnRef.current) {\n    stableFnRef.current = (...args) => cbRef.current(...args)\n  }\n\n  return stableFnRef.current\n}\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\nfunction replaceEqualDeep(prev: any, next: any) {\n  if (prev === next) {\n    return prev\n  }\n\n  const array = Array.isArray(prev) && Array.isArray(next)\n\n  if (array || (isPlainObject(prev) && isPlainObject(next))) {\n    const aSize = array ? prev.length : Object.keys(prev).length\n    const bItems = array ? next : Object.keys(next)\n    const bSize = bItems.length\n    const copy: any = array ? [] : {}\n\n    let equalItems = 0\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i]\n      copy[key] = replaceEqualDeep(prev[key], next[key])\n      if (copy[key] === prev[key]) {\n        equalItems++\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? prev : copy\n  }\n\n  return next\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nfunction isPlainObject(o: any) {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has modified constructor\n  const ctor = o.constructor\n  if (typeof ctor === 'undefined') {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any) {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function defaultStringifySearch(search: Record<string, unknown>) {\n  search = { ...search }\n\n  if (search) {\n    Object.keys(search).forEach((key) => {\n      const val = search[key]\n      if (typeof val === 'undefined' || val === undefined) {\n        delete search[key]\n      } else if (val && typeof val === 'object' && val !== null) {\n        try {\n          search[key] = JSON.stringify(val)\n        } catch (err) {\n          // silent\n        }\n      }\n    })\n  }\n\n  const searchStr = new URLSearchParams(\n    search as Record<string, string>,\n  ).toString()\n\n  return searchStr ? `?${searchStr}` : ''\n}\n\nexport function defaultParseSearch(searchStr: string): Record<string, any> {\n  if (searchStr.substring(0, 1) === '?') {\n    searchStr = searchStr.substring(1)\n  }\n\n  let query: Record<string, unknown> = Object.fromEntries(\n    (new URLSearchParams(searchStr) as any).entries(),\n  )\n\n  // Try to parse query params\n  for (let key in query) {\n    const value = query[key]\n\n    try {\n      query[key] = JSON.parse(value as string)\n    } catch (err) {\n      //\n    }\n  }\n\n  return query\n}\n"],"names":["LocationContext","React","createContext","MatchesContext","routerContext","isDOM","Boolean","window","document","createElement","useLayoutEffect","useEffect","createDefaultHistory","createBrowserHistory","createMemoryHistory","ReactLocation","options","listeners","isTransitioning","history","stringifySearch","defaultStringifySearch","parseSearch","defaultParseSearch","current","parseLocation","location","destroy","listen","event","notify","subscribe","listener","push","filter","x","forEach","buildNext","basepath","dest","from","pathname","resolvePath","to","updatedSearch","search","functionalUpdate","filteredSearch","__searchFilters","length","reduce","prev","next","replaceEqualDeep","searchStr","hash","href","key","navigate","replace","navigateTimeout","clearTimeout","nextAction","isSameUrl","previousLocation","parsedSearch","split","reverse","MatchesProvider","props","Router","children","routes","userBasepath","rest","cleanPath","useState","matches","routerState","setRouterState","rootMatch","useMemo","id","params","route","router","routesById","recurseRoutes","parent","map","path","joinPaths","console","warn","Error","undefined","state","log","update","matchRoutes","useLocation","context","useContext","warning","useRouter","value","currentLocation","recurse","parentMatch","filteredRoutes","filterRoutes","find","fullRoutePathName","fuzzy","matchParams","matchRoute","caseSensitive","interpolatedPath","interpolatePath","interpolatedId","match","leaveWildcard","interpolatedPathSegments","parsePathname","segment","type","substring","useParentMatches","useMatch","slice","findIndex","d","useMatches","useNavigate","useBuildNext","fromCurrent","useLatestCallback","Navigate","opts","searchFilters","flat","Link","target","style","onClick","onMouseEnter","className","getActiveProps","getInactiveProps","activeOptions","disabled","_ref","url","URL","e","handleClick","isCtrlEvent","defaultPrevented","button","preventDefault","pathIsEqual","currentPathSplit","nextPathSplit","pathIsFuzzyEqual","every","i","hashIsEqual","pathTest","exact","hashTest","includeHash","isActive","activeStyle","activeClassName","activeRest","inactiveStyle","inactiveClassName","inactiveRest","ref","join","role","Outlet","matchElement","element","defaultElement","pendingElement","defaultPendingElement","useResolvePath","useSearch","matchLocation","pathParams","matchByPath","searchMatched","matchBySearch","useMatchRoute","MatchRoute","usePrompt","message","when","unblock","block","transition","confirm","retry","Prompt","cond","isFunction","updater","previous","paths","baseSegments","routeSegments","isMatch","Math","max","baseSegment","routeSegment","isLastRouteSegment","isLastBaseSegment","toLowerCase","segments","part","startsWith","charAt","base","RegExp","toSegments","toSegment","index","pop","joined","metaKey","altKey","ctrlKey","shiftKey","cb","stableFnRef","useRef","cbRef","array","Array","isArray","isPlainObject","aSize","Object","keys","bItems","bSize","copy","equalItems","o","hasObjectPrototype","ctor","constructor","prot","prototype","hasOwnProperty","toString","call","val","JSON","stringify","err","URLSearchParams","query","fromEntries","entries","parse"],"mappings":"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"}