{"version":3,"file":"index.js","sources":["../../src/index.tsx"],"sourcesContent":["import {\n  LoaderFn,\n  RouteMatch,\n  PartialGenerics,\n  DefaultGenerics,\n} from '@tanstack/react-location'\n\nexport type FetchPolicy = 'cache-and-network' | 'cache-first' | 'network-only'\n\nexport type SimpleCacheRecord<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n> = {\n  key: string\n  updatedAt: number\n  ready: boolean\n  data?: any\n  invalid?: boolean\n  match: RouteMatch<TGenerics>\n}\n\nexport type SimpleCacheRecords<\n  TGenerics extends PartialGenerics = DefaultGenerics,\n> = Record<string, SimpleCacheRecord<TGenerics>>\n\n//\n\nexport class ReactLocationSimpleCache<\n  TDefualtGenerics extends PartialGenerics = DefaultGenerics,\n> {\n  records: SimpleCacheRecords<any> = {}\n\n  constructor() {}\n\n  createLoader<TGenerics extends TDefualtGenerics = TDefualtGenerics>(\n    loader: LoaderFn<TGenerics>,\n    opts?: {\n      key?: (match: RouteMatch<TGenerics>) => string\n      maxAge?: number\n      policy?: FetchPolicy\n    },\n  ): LoaderFn<TGenerics> {\n    const maxAge = opts?.maxAge ?? 0\n    const policy = opts?.policy ?? 'cache-and-network'\n\n    const cachedLoader: LoaderFn<TGenerics> = async (match, loaderOptions) => {\n      // Cache on pathname\n      const key = opts?.key ? opts.key(match) : match.pathname\n\n      // No cache? Create it.\n      if (!this.records[key]) {\n        this.records[key] = {\n          key,\n          updatedAt: 0,\n          ready: false,\n          match,\n        }\n      }\n\n      const entry = this.records[key]!\n\n      Object.assign(entry, {\n        match,\n        loaderOptions,\n      })\n\n      const doFetch = async () => {\n        loaderOptions.dispatch({ type: 'loading' })\n        try {\n          const data = await loader(match, loaderOptions)\n          entry.updatedAt = Date.now()\n          entry.ready = true\n          entry.data = data\n          loaderOptions.dispatch({ type: 'resolve', data })\n          return data\n        } catch (err) {\n          loaderOptions.dispatch({ type: 'reject', error: err })\n          throw err\n        }\n      }\n\n      if (policy === 'network-only') {\n        return await doFetch()\n      }\n\n      if (!entry.updatedAt) {\n        await doFetch()\n      }\n\n      if (policy === 'cache-first') {\n        return entry.data\n      }\n\n      if (Date.now() - entry.updatedAt > maxAge) {\n        doFetch()\n      }\n\n      return entry.data\n    }\n\n    return cachedLoader\n  }\n  filter<TGenerics extends TDefualtGenerics = TDefualtGenerics>(\n    fn: (record: SimpleCacheRecord<TGenerics>) => any,\n  ): SimpleCacheRecord<TGenerics>[] {\n    return Object.keys(this.records)\n      .filter((key) => fn(this.records[key]!))\n      .map((d) => this.records[d]) as SimpleCacheRecord<TGenerics>[]\n  }\n  find<TGenerics extends TDefualtGenerics = TDefualtGenerics>(\n    fn: (record: SimpleCacheRecord<TGenerics>) => any,\n  ): SimpleCacheRecord<TGenerics> | undefined {\n    return this.filter<TGenerics>(fn)[0]\n  }\n  invalidate<TGenerics extends TDefualtGenerics = TDefualtGenerics>(\n    fn: (record: SimpleCacheRecord<TGenerics>) => any,\n  ) {\n    const records = this.filter(fn)\n    records.forEach((record) => {\n      record.invalid = true\n    })\n  }\n  removeAll() {\n    this.records = {}\n  }\n  remove<TGenerics extends TDefualtGenerics = TDefualtGenerics>(\n    fn: (record: SimpleCacheRecord<TGenerics>) => any,\n  ) {\n    this.filter(fn).forEach((record) => {\n      delete this.records[record.key]\n    })\n  }\n}\n"],"names":["ReactLocationSimpleCache","records","createLoader","loader","opts","maxAge","policy","cachedLoader","match","loaderOptions","key","pathname","updatedAt","ready","entry","Object","assign","doFetch","dispatch","type","data","Date","now","error","filter","fn","keys","map","d","find","invalidate","forEach","record","invalid","removeAll","remove"],"mappings":"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"}